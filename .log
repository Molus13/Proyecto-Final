2023-03-08 12:19:09,167 [8776] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-08 12:19:09,167 [8776] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-08 12:19:09,167 [8776] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-08 12:19:09,168 [8776] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-08 12:19:09,170 [8776] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-08 12:19:09,170 [8776] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-08 12:19:09,983 [8776] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-08 12:19:09,986 [8776] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-08 12:19:09,987 [8776] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-08 12:19:09,987 [8776] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-08 12:19:09,988 [8776] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-08 12:19:09,988 [8776] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-08 12:19:57,579 [8776] INFO     numexpr.utils:160: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-03-08 12:23:36,332 [8776] WARNING  tabula.util:197: [JupyterRequire] 'pages' argument isn't specified.Will extract only from page 1 by default.
2023-03-08 12:24:42,703 [8776] WARNING  tabula.util:197: [JupyterRequire] 'pages' argument isn't specified.Will extract only from page 1 by default.
2023-03-08 12:26:40,769 [8776] WARNING  tabula.util:197: [JupyterRequire] 'pages' argument isn't specified.Will extract only from page 1 by default.
2023-03-08 12:35:41,986 [8776] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-08 12:35:41,986 [8776] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-08 12:35:41,986 [8776] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-08 12:35:41,991 [8776] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-08 12:35:41,993 [8776] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-08 12:35:41,994 [8776] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-08 12:35:56,736 [22500] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-08 12:35:56,737 [22500] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-08 12:35:56,737 [22500] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-08 12:35:56,738 [22500] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-08 12:35:56,739 [22500] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-08 12:35:56,739 [22500] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-08 12:35:57,518 [22500] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-08 12:35:57,518 [22500] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-08 12:35:57,518 [22500] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-08 12:35:57,520 [22500] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-08 12:35:57,520 [22500] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-08 12:35:57,521 [22500] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-08 12:36:02,459 [22500] INFO     numexpr.utils:160: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-03-08 13:17:22,458 [22500] INFO     WDM:11: [JupyterRequire] ====== WebDriver manager ======
2023-03-08 13:17:23,789 [22500] INFO     WDM:11: [JupyterRequire] Get LATEST chromedriver version for google-chrome 110.0.5481
2023-03-08 13:17:23,796 [22500] DEBUG    urllib3.connectionpool:1003: [JupyterRequire] Starting new HTTPS connection (1): chromedriver.storage.googleapis.com:443
2023-03-08 13:17:24,107 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] https://chromedriver.storage.googleapis.com:443 "GET /LATEST_RELEASE_110.0.5481 HTTP/1.1" 200 13
2023-03-08 13:17:24,846 [22500] INFO     WDM:11: [JupyterRequire] There is no [win32] chromedriver for browser 110.0.5481 in cache
2023-03-08 13:17:24,847 [22500] INFO     WDM:11: [JupyterRequire] About to download new driver from https://chromedriver.storage.googleapis.com/110.0.5481.77/chromedriver_win32.zip
2023-03-08 13:17:24,849 [22500] DEBUG    urllib3.connectionpool:1003: [JupyterRequire] Starting new HTTPS connection (1): chromedriver.storage.googleapis.com:443
2023-03-08 13:17:24,929 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] https://chromedriver.storage.googleapis.com:443 "GET /110.0.5481.77/chromedriver_win32.zip HTTP/1.1" 200 7106644
2023-03-08 13:17:28,247 [22500] INFO     WDM:11: [JupyterRequire] Driver has been saved in cache [C:\Users\mocus\.wdm\drivers\chromedriver\win32\110.0.5481]
2023-03-08 13:17:28,248 [22500] WARNING  py.warnings:109: [JupyterRequire] C:\Users\mocus\AppData\Local\Temp\ipykernel_22500\4048995679.py:3: DeprecationWarning: executable_path has been deprecated, please pass in a Service object
  driver=webdriver.Chrome(PATH)       # abre una venta una de chrome

2023-03-08 13:17:28,894 [22500] DEBUG    selenium.webdriver.common.service:204: [JupyterRequire] Started executable: `C:\Users\mocus\.wdm\drivers\chromedriver\win32\110.0.5481\chromedriver.exe` in a child process with pid: 9236
2023-03-08 13:17:29,411 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:55485/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "pageLoadStrategy": "normal", "goog:chromeOptions": {"extensions": [], "args": []}}}}
2023-03-08 13:17:29,411 [22500] DEBUG    urllib3.connectionpool:228: [JupyterRequire] Starting new HTTP connection (1): localhost:55485
2023-03-08 13:17:30,103 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:55485 "POST /session HTTP/1.1" 200 790
2023-03-08 13:17:30,103 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"110.0.5481.178","chrome":{"chromedriverVersion":"110.0.5481.77 (65ed616c6e8ee3fe0ad64fe83796c020644d42af-refs/branch-heads/5481@{#839})","userDataDir":"C:\\Users\\mocus\\AppData\\Local\\Temp\\scoped_dir9236_1307748475"},"goog:chromeOptions":{"debuggerAddress":"localhost:55490"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:virtualAuthenticators":true},"sessionId":"bc2b8ff23cedc65a402215964ed2e2e8"}} | headers=HTTPHeaderDict({'Content-Length': '790', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:17:30,104 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:17:30,104 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:55485/session/bc2b8ff23cedc65a402215964ed2e2e8/url {"url": "https://www.futboleras.es/liga-f-futbol-femenino.html"}
2023-03-08 13:17:32,807 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:55485 "POST /session/bc2b8ff23cedc65a402215964ed2e2e8/url HTTP/1.1" 200 14
2023-03-08 13:17:32,808 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:17:32,808 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:20:17,580 [22500] DEBUG    selenium.webdriver.common.service:204: [JupyterRequire] Started executable: `C:\Users\mocus\.wdm\drivers\chromedriver\win32\110.0.5481\chromedriver.exe` in a child process with pid: 28012
2023-03-08 13:20:18,110 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:55734/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "pageLoadStrategy": "normal", "goog:chromeOptions": {"extensions": [], "args": []}}}}
2023-03-08 13:20:18,111 [22500] DEBUG    urllib3.connectionpool:228: [JupyterRequire] Starting new HTTP connection (1): localhost:55734
2023-03-08 13:20:18,679 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:55734 "POST /session HTTP/1.1" 200 790
2023-03-08 13:20:18,681 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"110.0.5481.178","chrome":{"chromedriverVersion":"110.0.5481.77 (65ed616c6e8ee3fe0ad64fe83796c020644d42af-refs/branch-heads/5481@{#839})","userDataDir":"C:\\Users\\mocus\\AppData\\Local\\Temp\\scoped_dir28012_645211303"},"goog:chromeOptions":{"debuggerAddress":"localhost:55738"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:virtualAuthenticators":true},"sessionId":"9e81ad36b2078e72fc6481048f229409"}} | headers=HTTPHeaderDict({'Content-Length': '790', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:20:18,681 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:23:18,083 [22500] DEBUG    selenium.webdriver.common.service:204: [JupyterRequire] Started executable: `C:\Users\mocus\.wdm\drivers\chromedriver\win32\110.0.5481\chromedriver.exe` in a child process with pid: 22244
2023-03-08 13:23:18,598 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:55860/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "pageLoadStrategy": "normal", "goog:chromeOptions": {"extensions": [], "args": []}}}}
2023-03-08 13:23:18,599 [22500] DEBUG    urllib3.connectionpool:228: [JupyterRequire] Starting new HTTP connection (1): localhost:55860
2023-03-08 13:23:19,258 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:55860 "POST /session HTTP/1.1" 200 791
2023-03-08 13:23:19,260 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"110.0.5481.178","chrome":{"chromedriverVersion":"110.0.5481.77 (65ed616c6e8ee3fe0ad64fe83796c020644d42af-refs/branch-heads/5481@{#839})","userDataDir":"C:\\Users\\mocus\\AppData\\Local\\Temp\\scoped_dir22244_1120834452"},"goog:chromeOptions":{"debuggerAddress":"localhost:55863"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:virtualAuthenticators":true},"sessionId":"ebfc6dafbd1b594dd9c47f151f24722d"}} | headers=HTTPHeaderDict({'Content-Length': '791', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:23:19,260 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:23:21,274 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:55860/session/ebfc6dafbd1b594dd9c47f151f24722d/url {"url": "https://www.futboleras.es/liga-f-futbol-femenino.htmlhttps://www.futboleras.es/liga-f-futbol-femenino.html"}
2023-03-08 13:23:25,474 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:55860 "POST /session/ebfc6dafbd1b594dd9c47f151f24722d/url HTTP/1.1" 200 14
2023-03-08 13:23:25,474 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:23:25,475 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:23:30,481 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:55860/session/ebfc6dafbd1b594dd9c47f151f24722d/element {"using": "xpath", "value": "//*[@id=\"W0wltc\"]"}
2023-03-08 13:23:30,513 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:55860 "POST /session/ebfc6dafbd1b594dd9c47f151f24722d/element HTTP/1.1" 404 928
2023-03-08 13:23:30,513 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=404 | data={"value":{"error":"no such element","message":"no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"W0wltc\"]\"}\n  (Session info: chrome=110.0.5481.178)","stacktrace":"Backtrace:\n\t(No symbol) [0x008437D3]\n\t(No symbol) [0x007D8B81]\n\t(No symbol) [0x006DB36D]\n\t(No symbol) [0x0070D382]\n\t(No symbol) [0x0070D4BB]\n\t(No symbol) [0x00743302]\n\t(No symbol) [0x0072B464]\n\t(No symbol) [0x00741215]\n\t(No symbol) [0x0072B216]\n\t(No symbol) [0x00700D97]\n\t(No symbol) [0x0070253D]\n\tGetHandleVerifier [0x00ABABF2+2510930]\n\tGetHandleVerifier [0x00AE8EC1+2700065]\n\tGetHandleVerifier [0x00AEC86C+2714828]\n\tGetHandleVerifier [0x008F3480+645344]\n\t(No symbol) [0x007E0FD2]\n\t(No symbol) [0x007E6C68]\n\t(No symbol) [0x007E6D4B]\n\t(No symbol) [0x007F0D6B]\n\tBaseThreadInitThunk [0x75E27D69+25]\n\tRtlInitializeExceptionChain [0x770FBB9B+107]\n\tRtlClearBits [0x770FBB1F+191]\n"}} | headers=HTTPHeaderDict({'Content-Length': '928', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:23:30,514 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:28:04,811 [22500] INFO     WDM:11: [JupyterRequire] ====== WebDriver manager ======
2023-03-08 13:28:06,025 [22500] INFO     WDM:11: [JupyterRequire] Get LATEST chromedriver version for google-chrome 110.0.5481
2023-03-08 13:28:06,026 [22500] DEBUG    urllib3.connectionpool:1003: [JupyterRequire] Starting new HTTPS connection (1): chromedriver.storage.googleapis.com:443
2023-03-08 13:28:06,141 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] https://chromedriver.storage.googleapis.com:443 "GET /LATEST_RELEASE_110.0.5481 HTTP/1.1" 200 13
2023-03-08 13:28:06,883 [22500] INFO     WDM:11: [JupyterRequire] Driver [C:\Users\mocus\.wdm\drivers\chromedriver\win32\110.0.5481\chromedriver.exe] found in cache
2023-03-08 13:28:06,886 [22500] DEBUG    selenium.webdriver.common.service:204: [JupyterRequire] Started executable: `C:\Users\mocus\.wdm\drivers\chromedriver\win32\110.0.5481\chromedriver.exe` in a child process with pid: 24860
2023-03-08 13:28:07,396 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:56078/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "pageLoadStrategy": "normal", "goog:chromeOptions": {"extensions": [], "args": []}}}}
2023-03-08 13:28:07,397 [22500] DEBUG    urllib3.connectionpool:228: [JupyterRequire] Starting new HTTP connection (1): localhost:56078
2023-03-08 13:28:08,039 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:56078 "POST /session HTTP/1.1" 200 790
2023-03-08 13:28:08,039 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"110.0.5481.178","chrome":{"chromedriverVersion":"110.0.5481.77 (65ed616c6e8ee3fe0ad64fe83796c020644d42af-refs/branch-heads/5481@{#839})","userDataDir":"C:\\Users\\mocus\\AppData\\Local\\Temp\\scoped_dir24860_600576587"},"goog:chromeOptions":{"debuggerAddress":"localhost:56081"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:virtualAuthenticators":true},"sessionId":"fef0027ca6fe9bc6bf0a4086cf27e81d"}} | headers=HTTPHeaderDict({'Content-Length': '790', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:28:08,040 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:28:08,040 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:56078/session/fef0027ca6fe9bc6bf0a4086cf27e81d/url {"url": "https://www.futboleras.es/unete.html"}
2023-03-08 13:28:10,354 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:56078 "POST /session/fef0027ca6fe9bc6bf0a4086cf27e81d/url HTTP/1.1" 200 14
2023-03-08 13:28:10,354 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:28:10,354 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:28:15,552 [22500] DEBUG    selenium.webdriver.common.service:204: [JupyterRequire] Started executable: `C:\Users\mocus\.wdm\drivers\chromedriver\win32\110.0.5481\chromedriver.exe` in a child process with pid: 25724
2023-03-08 13:28:16,058 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:56126/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "pageLoadStrategy": "normal", "goog:chromeOptions": {"extensions": [], "args": []}}}}
2023-03-08 13:28:16,059 [22500] DEBUG    urllib3.connectionpool:228: [JupyterRequire] Starting new HTTP connection (1): localhost:56126
2023-03-08 13:28:16,647 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:56126 "POST /session HTTP/1.1" 200 790
2023-03-08 13:28:16,649 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"110.0.5481.178","chrome":{"chromedriverVersion":"110.0.5481.77 (65ed616c6e8ee3fe0ad64fe83796c020644d42af-refs/branch-heads/5481@{#839})","userDataDir":"C:\\Users\\mocus\\AppData\\Local\\Temp\\scoped_dir25724_325196860"},"goog:chromeOptions":{"debuggerAddress":"localhost:56130"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:virtualAuthenticators":true},"sessionId":"8210bbbc3323fb699cb6ffb73233c1d3"}} | headers=HTTPHeaderDict({'Content-Length': '790', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:28:16,649 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:28:18,722 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:56126/session/8210bbbc3323fb699cb6ffb73233c1d3/url {"url": "https://www.futboleras.es/liga-f-futbol-femenino.htmlhttps://www.futboleras.es/liga-f-futbol-femenino.html"}
2023-03-08 13:28:23,825 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:56126 "POST /session/8210bbbc3323fb699cb6ffb73233c1d3/url HTTP/1.1" 200 14
2023-03-08 13:28:23,826 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:28:23,826 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:28:28,829 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:56126/session/8210bbbc3323fb699cb6ffb73233c1d3/element {"using": "xpath", "value": "//*[@id=\"W0wltc\"]"}
2023-03-08 13:28:28,848 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:56126 "POST /session/8210bbbc3323fb699cb6ffb73233c1d3/element HTTP/1.1" 404 928
2023-03-08 13:28:28,848 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=404 | data={"value":{"error":"no such element","message":"no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"W0wltc\"]\"}\n  (Session info: chrome=110.0.5481.178)","stacktrace":"Backtrace:\n\t(No symbol) [0x008437D3]\n\t(No symbol) [0x007D8B81]\n\t(No symbol) [0x006DB36D]\n\t(No symbol) [0x0070D382]\n\t(No symbol) [0x0070D4BB]\n\t(No symbol) [0x00743302]\n\t(No symbol) [0x0072B464]\n\t(No symbol) [0x00741215]\n\t(No symbol) [0x0072B216]\n\t(No symbol) [0x00700D97]\n\t(No symbol) [0x0070253D]\n\tGetHandleVerifier [0x00ABABF2+2510930]\n\tGetHandleVerifier [0x00AE8EC1+2700065]\n\tGetHandleVerifier [0x00AEC86C+2714828]\n\tGetHandleVerifier [0x008F3480+645344]\n\t(No symbol) [0x007E0FD2]\n\t(No symbol) [0x007E6C68]\n\t(No symbol) [0x007E6D4B]\n\t(No symbol) [0x007F0D6B]\n\tBaseThreadInitThunk [0x75E27D69+25]\n\tRtlInitializeExceptionChain [0x770FBB9B+107]\n\tRtlClearBits [0x770FBB1F+191]\n"}} | headers=HTTPHeaderDict({'Content-Length': '928', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:28:28,849 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:30:32,041 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] DELETE http://localhost:56126/session/8210bbbc3323fb699cb6ffb73233c1d3 {}
2023-03-08 13:30:32,095 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:56126 "DELETE /session/8210bbbc3323fb699cb6ffb73233c1d3 HTTP/1.1" 200 14
2023-03-08 13:30:32,095 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:30:32,095 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:30:34,718 [22500] DEBUG    selenium.webdriver.common.service:204: [JupyterRequire] Started executable: `C:\Users\mocus\.wdm\drivers\chromedriver\win32\110.0.5481\chromedriver.exe` in a child process with pid: 17880
2023-03-08 13:30:35,246 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:56314/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "pageLoadStrategy": "normal", "goog:chromeOptions": {"extensions": [], "args": []}}}}
2023-03-08 13:30:35,247 [22500] DEBUG    urllib3.connectionpool:228: [JupyterRequire] Starting new HTTP connection (1): localhost:56314
2023-03-08 13:30:35,886 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:56314 "POST /session HTTP/1.1" 200 790
2023-03-08 13:30:35,886 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"110.0.5481.178","chrome":{"chromedriverVersion":"110.0.5481.77 (65ed616c6e8ee3fe0ad64fe83796c020644d42af-refs/branch-heads/5481@{#839})","userDataDir":"C:\\Users\\mocus\\AppData\\Local\\Temp\\scoped_dir17880_947637506"},"goog:chromeOptions":{"debuggerAddress":"localhost:56317"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:virtualAuthenticators":true},"sessionId":"1b0ab41813566071de208646171ad062"}} | headers=HTTPHeaderDict({'Content-Length': '790', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:30:35,886 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:30:35,887 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:56314/session/1b0ab41813566071de208646171ad062/url {"url": "https://www.futboleras.es/liga-f-futbol-femenino.htmlhttps://www.futboleras.es/liga-f-futbol-femenino.html"}
2023-03-08 13:30:40,146 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:56314 "POST /session/1b0ab41813566071de208646171ad062/url HTTP/1.1" 200 14
2023-03-08 13:30:40,148 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:30:40,148 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:30:45,152 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:56314/session/1b0ab41813566071de208646171ad062/element {"using": "xpath", "value": "//*[@id=\"W0wltc\"]"}
2023-03-08 13:30:45,174 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:56314 "POST /session/1b0ab41813566071de208646171ad062/element HTTP/1.1" 404 928
2023-03-08 13:30:45,174 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=404 | data={"value":{"error":"no such element","message":"no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"W0wltc\"]\"}\n  (Session info: chrome=110.0.5481.178)","stacktrace":"Backtrace:\n\t(No symbol) [0x008437D3]\n\t(No symbol) [0x007D8B81]\n\t(No symbol) [0x006DB36D]\n\t(No symbol) [0x0070D382]\n\t(No symbol) [0x0070D4BB]\n\t(No symbol) [0x00743302]\n\t(No symbol) [0x0072B464]\n\t(No symbol) [0x00741215]\n\t(No symbol) [0x0072B216]\n\t(No symbol) [0x00700D97]\n\t(No symbol) [0x0070253D]\n\tGetHandleVerifier [0x00ABABF2+2510930]\n\tGetHandleVerifier [0x00AE8EC1+2700065]\n\tGetHandleVerifier [0x00AEC86C+2714828]\n\tGetHandleVerifier [0x008F3480+645344]\n\t(No symbol) [0x007E0FD2]\n\t(No symbol) [0x007E6C68]\n\t(No symbol) [0x007E6D4B]\n\t(No symbol) [0x007F0D6B]\n\tBaseThreadInitThunk [0x75E27D69+25]\n\tRtlInitializeExceptionChain [0x770FBB9B+107]\n\tRtlClearBits [0x770FBB1F+191]\n"}} | headers=HTTPHeaderDict({'Content-Length': '928', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:30:45,175 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:31:53,357 [22500] DEBUG    selenium.webdriver.common.service:204: [JupyterRequire] Started executable: `C:\Users\mocus\.wdm\drivers\chromedriver\win32\110.0.5481\chromedriver.exe` in a child process with pid: 12180
2023-03-08 13:31:53,881 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:56881/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "pageLoadStrategy": "normal", "goog:chromeOptions": {"extensions": [], "args": []}}}}
2023-03-08 13:32:00,018 [22500] DEBUG    urllib3.connectionpool:228: [JupyterRequire] Starting new HTTP connection (1): localhost:56881
2023-03-08 13:32:00,643 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:56881 "POST /session HTTP/1.1" 200 791
2023-03-08 13:32:00,644 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"110.0.5481.178","chrome":{"chromedriverVersion":"110.0.5481.77 (65ed616c6e8ee3fe0ad64fe83796c020644d42af-refs/branch-heads/5481@{#839})","userDataDir":"C:\\Users\\mocus\\AppData\\Local\\Temp\\scoped_dir12180_1105787429"},"goog:chromeOptions":{"debuggerAddress":"localhost:56894"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:virtualAuthenticators":true},"sessionId":"3730f2a21504f8940b07c472bfeb1e6c"}} | headers=HTTPHeaderDict({'Content-Length': '791', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:32:00,644 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:32:00,645 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:56881/session/3730f2a21504f8940b07c472bfeb1e6c/url {"url": "https://www.futboleras.es/liga-f-futbol-femenino.htmlhttps://www.futboleras.es/liga-f-futbol-femenino.html"}
2023-03-08 13:32:04,520 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:56881 "POST /session/3730f2a21504f8940b07c472bfeb1e6c/url HTTP/1.1" 200 14
2023-03-08 13:32:04,520 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:32:04,521 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:32:09,535 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:56881/session/3730f2a21504f8940b07c472bfeb1e6c/element {"using": "xpath", "value": "//*[@id=\"W0wltc\"]"}
2023-03-08 13:32:09,553 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:56881 "POST /session/3730f2a21504f8940b07c472bfeb1e6c/element HTTP/1.1" 404 928
2023-03-08 13:32:09,555 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=404 | data={"value":{"error":"no such element","message":"no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"W0wltc\"]\"}\n  (Session info: chrome=110.0.5481.178)","stacktrace":"Backtrace:\n\t(No symbol) [0x008437D3]\n\t(No symbol) [0x007D8B81]\n\t(No symbol) [0x006DB36D]\n\t(No symbol) [0x0070D382]\n\t(No symbol) [0x0070D4BB]\n\t(No symbol) [0x00743302]\n\t(No symbol) [0x0072B464]\n\t(No symbol) [0x00741215]\n\t(No symbol) [0x0072B216]\n\t(No symbol) [0x00700D97]\n\t(No symbol) [0x0070253D]\n\tGetHandleVerifier [0x00ABABF2+2510930]\n\tGetHandleVerifier [0x00AE8EC1+2700065]\n\tGetHandleVerifier [0x00AEC86C+2714828]\n\tGetHandleVerifier [0x008F3480+645344]\n\t(No symbol) [0x007E0FD2]\n\t(No symbol) [0x007E6C68]\n\t(No symbol) [0x007E6D4B]\n\t(No symbol) [0x007F0D6B]\n\tBaseThreadInitThunk [0x75E27D69+25]\n\tRtlInitializeExceptionChain [0x770FBB9B+107]\n\tRtlClearBits [0x770FBB1F+191]\n"}} | headers=HTTPHeaderDict({'Content-Length': '928', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:32:09,555 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:33:08,402 [22500] DEBUG    selenium.webdriver.common.service:204: [JupyterRequire] Started executable: `C:\Users\mocus\.wdm\drivers\chromedriver\win32\110.0.5481\chromedriver.exe` in a child process with pid: 31584
2023-03-08 13:33:08,909 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:57000/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "pageLoadStrategy": "normal", "goog:chromeOptions": {"extensions": [], "args": []}}}}
2023-03-08 13:33:08,910 [22500] DEBUG    urllib3.connectionpool:228: [JupyterRequire] Starting new HTTP connection (1): localhost:57000
2023-03-08 13:33:09,471 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:57000 "POST /session HTTP/1.1" 200 791
2023-03-08 13:33:09,472 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"110.0.5481.178","chrome":{"chromedriverVersion":"110.0.5481.77 (65ed616c6e8ee3fe0ad64fe83796c020644d42af-refs/branch-heads/5481@{#839})","userDataDir":"C:\\Users\\mocus\\AppData\\Local\\Temp\\scoped_dir31584_1654767984"},"goog:chromeOptions":{"debuggerAddress":"localhost:57003"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:virtualAuthenticators":true},"sessionId":"0b0d9e382f48eec2da78271cd6954465"}} | headers=HTTPHeaderDict({'Content-Length': '791', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:33:09,472 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:33:09,473 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:57000/session/0b0d9e382f48eec2da78271cd6954465/url {"url": "https://www.futboleras.es/liga-f-futbol-femenino.htmlhttps://www.futboleras.es/liga-f-futbol-femenino.html"}
2023-03-08 13:33:13,243 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:57000 "POST /session/0b0d9e382f48eec2da78271cd6954465/url HTTP/1.1" 200 14
2023-03-08 13:33:13,243 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:33:13,243 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:33:18,248 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:57000/session/0b0d9e382f48eec2da78271cd6954465/element {"using": "xpath", "value": "//*[@id=\"qc-cmp2-ui\"]/div[2]/div/button[2]"}
2023-03-08 13:33:18,265 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:57000 "POST /session/0b0d9e382f48eec2da78271cd6954465/element HTTP/1.1" 200 88
2023-03-08 13:33:18,265 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"1505f867-47cd-4618-aa37-f9e853439742"}} | headers=HTTPHeaderDict({'Content-Length': '88', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:33:18,265 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:33:18,277 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:57000/session/0b0d9e382f48eec2da78271cd6954465/element/1505f867-47cd-4618-aa37-f9e853439742/click {"id": "1505f867-47cd-4618-aa37-f9e853439742"}
2023-03-08 13:33:18,399 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:57000 "POST /session/0b0d9e382f48eec2da78271cd6954465/element/1505f867-47cd-4618-aa37-f9e853439742/click HTTP/1.1" 200 14
2023-03-08 13:33:18,400 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:33:18,400 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:34:53,652 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:57000/session/0b0d9e382f48eec2da78271cd6954465/window/maximize {}
2023-03-08 13:34:53,804 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:57000 "POST /session/0b0d9e382f48eec2da78271cd6954465/window/maximize HTTP/1.1" 500 938
2023-03-08 13:34:53,805 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=500 | data={"value":{"error":"unknown error","message":"unknown error: failed to change window state to 'normal', current state is 'maximized'\n  (Session info: chrome=110.0.5481.178)","stacktrace":"Backtrace:\n\t(No symbol) [0x008437D3]\n\t(No symbol) [0x007D8B81]\n\t(No symbol) [0x006DB36D]\n\t(No symbol) [0x006C25E5]\n\t(No symbol) [0x006C1331]\n\t(No symbol) [0x006BFC61]\n\t(No symbol) [0x00752E99]\n\t(No symbol) [0x0072B41C]\n\t(No symbol) [0x00741215]\n\t(No symbol) [0x0072B216]\n\t(No symbol) [0x00700D97]\n\t(No symbol) [0x0070253D]\n\tGetHandleVerifier [0x00ABABF2+2510930]\n\tGetHandleVerifier [0x00AE8EC1+2700065]\n\tGetHandleVerifier [0x00AEC86C+2714828]\n\tGetHandleVerifier [0x008F3480+645344]\n\t(No symbol) [0x007E0FD2]\n\t(No symbol) [0x007E6C68]\n\t(No symbol) [0x007E6D4B]\n\t(No symbol) [0x007F0D6B]\n\tBaseThreadInitThunk [0x75E27D69+25]\n\tRtlInitializeExceptionChain [0x770FBB9B+107]\n\tRtlClearBits [0x770FBB1F+191]\n"}} | headers=HTTPHeaderDict({'Content-Length': '938', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:34:53,806 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:34:59,122 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:57000/session/0b0d9e382f48eec2da78271cd6954465/window/maximize {}
2023-03-08 13:34:59,535 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:57000 "POST /session/0b0d9e382f48eec2da78271cd6954465/window/maximize HTTP/1.1" 500 938
2023-03-08 13:34:59,536 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=500 | data={"value":{"error":"unknown error","message":"unknown error: failed to change window state to 'normal', current state is 'maximized'\n  (Session info: chrome=110.0.5481.178)","stacktrace":"Backtrace:\n\t(No symbol) [0x008437D3]\n\t(No symbol) [0x007D8B81]\n\t(No symbol) [0x006DB36D]\n\t(No symbol) [0x006C25E5]\n\t(No symbol) [0x006C1331]\n\t(No symbol) [0x006BFC61]\n\t(No symbol) [0x00752E99]\n\t(No symbol) [0x0072B41C]\n\t(No symbol) [0x00741215]\n\t(No symbol) [0x0072B216]\n\t(No symbol) [0x00700D97]\n\t(No symbol) [0x0070253D]\n\tGetHandleVerifier [0x00ABABF2+2510930]\n\tGetHandleVerifier [0x00AE8EC1+2700065]\n\tGetHandleVerifier [0x00AEC86C+2714828]\n\tGetHandleVerifier [0x008F3480+645344]\n\t(No symbol) [0x007E0FD2]\n\t(No symbol) [0x007E6C68]\n\t(No symbol) [0x007E6D4B]\n\t(No symbol) [0x007F0D6B]\n\tBaseThreadInitThunk [0x75E27D69+25]\n\tRtlInitializeExceptionChain [0x770FBB9B+107]\n\tRtlClearBits [0x770FBB1F+191]\n"}} | headers=HTTPHeaderDict({'Content-Length': '938', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:34:59,536 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:35:33,857 [22500] INFO     WDM:11: [JupyterRequire] ====== WebDriver manager ======
2023-03-08 13:35:35,103 [22500] INFO     WDM:11: [JupyterRequire] Get LATEST chromedriver version for google-chrome 110.0.5481
2023-03-08 13:35:35,106 [22500] DEBUG    urllib3.connectionpool:1003: [JupyterRequire] Starting new HTTPS connection (1): chromedriver.storage.googleapis.com:443
2023-03-08 13:35:35,276 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] https://chromedriver.storage.googleapis.com:443 "GET /LATEST_RELEASE_110.0.5481 HTTP/1.1" 200 13
2023-03-08 13:35:36,085 [22500] INFO     WDM:11: [JupyterRequire] Driver [C:\Users\mocus\.wdm\drivers\chromedriver\win32\110.0.5481\chromedriver.exe] found in cache
2023-03-08 13:35:36,089 [22500] DEBUG    selenium.webdriver.common.service:204: [JupyterRequire] Started executable: `C:\Users\mocus\.wdm\drivers\chromedriver\win32\110.0.5481\chromedriver.exe` in a child process with pid: 16776
2023-03-08 13:35:36,593 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:58261/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "pageLoadStrategy": "normal", "goog:chromeOptions": {"extensions": [], "args": []}}}}
2023-03-08 13:35:36,594 [22500] DEBUG    urllib3.connectionpool:228: [JupyterRequire] Starting new HTTP connection (1): localhost:58261
2023-03-08 13:35:37,186 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:58261 "POST /session HTTP/1.1" 200 790
2023-03-08 13:35:37,187 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"110.0.5481.178","chrome":{"chromedriverVersion":"110.0.5481.77 (65ed616c6e8ee3fe0ad64fe83796c020644d42af-refs/branch-heads/5481@{#839})","userDataDir":"C:\\Users\\mocus\\AppData\\Local\\Temp\\scoped_dir16776_622698627"},"goog:chromeOptions":{"debuggerAddress":"localhost:58265"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:virtualAuthenticators":true},"sessionId":"273dfa19ce456537b1a45b2c8b196ac8"}} | headers=HTTPHeaderDict({'Content-Length': '790', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:35:37,187 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:35:37,188 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:58261/session/273dfa19ce456537b1a45b2c8b196ac8/url {"url": "https://www.futboleras.es/unete.html"}
2023-03-08 13:35:39,350 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:58261 "POST /session/273dfa19ce456537b1a45b2c8b196ac8/url HTTP/1.1" 200 14
2023-03-08 13:35:39,352 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:35:39,352 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:35:39,360 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] DELETE http://localhost:58261/session/273dfa19ce456537b1a45b2c8b196ac8 {}
2023-03-08 13:35:39,423 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:58261 "DELETE /session/273dfa19ce456537b1a45b2c8b196ac8 HTTP/1.1" 200 14
2023-03-08 13:35:39,424 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:35:39,425 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:35:41,538 [22500] DEBUG    selenium.webdriver.common.service:204: [JupyterRequire] Started executable: `C:\Users\mocus\.wdm\drivers\chromedriver\win32\110.0.5481\chromedriver.exe` in a child process with pid: 12472
2023-03-08 13:35:42,041 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:58319/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "pageLoadStrategy": "normal", "goog:chromeOptions": {"extensions": [], "args": []}}}}
2023-03-08 13:35:42,041 [22500] DEBUG    urllib3.connectionpool:228: [JupyterRequire] Starting new HTTP connection (1): localhost:58319
2023-03-08 13:35:42,612 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:58319 "POST /session HTTP/1.1" 200 790
2023-03-08 13:35:42,613 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"110.0.5481.178","chrome":{"chromedriverVersion":"110.0.5481.77 (65ed616c6e8ee3fe0ad64fe83796c020644d42af-refs/branch-heads/5481@{#839})","userDataDir":"C:\\Users\\mocus\\AppData\\Local\\Temp\\scoped_dir12472_456966914"},"goog:chromeOptions":{"debuggerAddress":"localhost:58322"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:virtualAuthenticators":true},"sessionId":"ad507e5efc99079014524a88490c24de"}} | headers=HTTPHeaderDict({'Content-Length': '790', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:35:42,613 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:35:46,684 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:58319/session/ad507e5efc99079014524a88490c24de/url {"url": "https://www.futboleras.es/liga-f-futbol-femenino.htmlhttps://www.futboleras.es/liga-f-futbol-femenino.html"}
2023-03-08 13:35:50,445 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:58319 "POST /session/ad507e5efc99079014524a88490c24de/url HTTP/1.1" 200 14
2023-03-08 13:35:50,446 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:35:50,446 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:35:55,457 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:58319/session/ad507e5efc99079014524a88490c24de/window/maximize {}
2023-03-08 13:35:55,569 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:58319 "POST /session/ad507e5efc99079014524a88490c24de/window/maximize HTTP/1.1" 200 51
2023-03-08 13:35:55,569 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":{"height":832,"width":1552,"x":-8,"y":-8}} | headers=HTTPHeaderDict({'Content-Length': '51', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:35:55,569 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:35:55,570 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:58319/session/ad507e5efc99079014524a88490c24de/element {"using": "xpath", "value": "//*[@id=\"qc-cmp2-ui\"]/div[2]/div/button[2]"}
2023-03-08 13:35:55,583 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:58319 "POST /session/ad507e5efc99079014524a88490c24de/element HTTP/1.1" 200 88
2023-03-08 13:35:55,583 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"30621ba2-608c-469a-a9be-22423e9dd272"}} | headers=HTTPHeaderDict({'Content-Length': '88', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:35:55,583 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:35:55,584 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:58319/session/ad507e5efc99079014524a88490c24de/element/30621ba2-608c-469a-a9be-22423e9dd272/click {"id": "30621ba2-608c-469a-a9be-22423e9dd272"}
2023-03-08 13:35:55,761 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:58319 "POST /session/ad507e5efc99079014524a88490c24de/element/30621ba2-608c-469a-a9be-22423e9dd272/click HTTP/1.1" 200 14
2023-03-08 13:35:55,762 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:35:55,762 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:40:20,270 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:58319/session/ad507e5efc99079014524a88490c24de/element {"using": "xpath", "value": "//*[@id=\"websiteMenuWrapper\"]/a[2]"}
2023-03-08 13:40:20,274 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:58319 "POST /session/ad507e5efc99079014524a88490c24de/element HTTP/1.1" 404 853
2023-03-08 13:40:20,274 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=404 | data={"value":{"error":"no such window","message":"no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=110.0.5481.178)","stacktrace":"Backtrace:\n\t(No symbol) [0x008437D3]\n\t(No symbol) [0x007D8B81]\n\t(No symbol) [0x006DB36D]\n\t(No symbol) [0x006BE5DA]\n\t(No symbol) [0x0072F0CB]\n\t(No symbol) [0x00740A56]\n\t(No symbol) [0x0072B216]\n\t(No symbol) [0x00700D97]\n\t(No symbol) [0x0070253D]\n\tGetHandleVerifier [0x00ABABF2+2510930]\n\tGetHandleVerifier [0x00AE8EC1+2700065]\n\tGetHandleVerifier [0x00AEC86C+2714828]\n\tGetHandleVerifier [0x008F3480+645344]\n\t(No symbol) [0x007E0FD2]\n\t(No symbol) [0x007E6C68]\n\t(No symbol) [0x007E6D4B]\n\t(No symbol) [0x007F0D6B]\n\tBaseThreadInitThunk [0x75E27D69+25]\n\tRtlInitializeExceptionChain [0x770FBB9B+107]\n\tRtlClearBits [0x770FBB1F+191]\n"}} | headers=HTTPHeaderDict({'Content-Length': '853', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:40:20,274 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:40:27,077 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:58319/session/ad507e5efc99079014524a88490c24de/element {"using": "xpath", "value": "//*[@id=\"websiteMenuWrapper\"]/a[2]"}
2023-03-08 13:40:27,079 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:58319 "POST /session/ad507e5efc99079014524a88490c24de/element HTTP/1.1" 404 853
2023-03-08 13:40:27,080 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=404 | data={"value":{"error":"no such window","message":"no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=110.0.5481.178)","stacktrace":"Backtrace:\n\t(No symbol) [0x008437D3]\n\t(No symbol) [0x007D8B81]\n\t(No symbol) [0x006DB36D]\n\t(No symbol) [0x006BE5DA]\n\t(No symbol) [0x0072F0CB]\n\t(No symbol) [0x00740A56]\n\t(No symbol) [0x0072B216]\n\t(No symbol) [0x00700D97]\n\t(No symbol) [0x0070253D]\n\tGetHandleVerifier [0x00ABABF2+2510930]\n\tGetHandleVerifier [0x00AE8EC1+2700065]\n\tGetHandleVerifier [0x00AEC86C+2714828]\n\tGetHandleVerifier [0x008F3480+645344]\n\t(No symbol) [0x007E0FD2]\n\t(No symbol) [0x007E6C68]\n\t(No symbol) [0x007E6D4B]\n\t(No symbol) [0x007F0D6B]\n\tBaseThreadInitThunk [0x75E27D69+25]\n\tRtlInitializeExceptionChain [0x770FBB9B+107]\n\tRtlClearBits [0x770FBB1F+191]\n"}} | headers=HTTPHeaderDict({'Content-Length': '853', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:40:27,080 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:45:15,300 [22500] DEBUG    selenium.webdriver.common.service:204: [JupyterRequire] Started executable: `C:\Users\mocus\.wdm\drivers\chromedriver\win32\110.0.5481\chromedriver.exe` in a child process with pid: 14208
2023-03-08 13:45:15,811 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:61003/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "pageLoadStrategy": "normal", "goog:chromeOptions": {"extensions": [], "args": []}}}}
2023-03-08 13:45:15,812 [22500] DEBUG    urllib3.connectionpool:228: [JupyterRequire] Starting new HTTP connection (1): localhost:61003
2023-03-08 13:45:16,522 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:61003 "POST /session HTTP/1.1" 200 791
2023-03-08 13:45:16,523 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"110.0.5481.178","chrome":{"chromedriverVersion":"110.0.5481.77 (65ed616c6e8ee3fe0ad64fe83796c020644d42af-refs/branch-heads/5481@{#839})","userDataDir":"C:\\Users\\mocus\\AppData\\Local\\Temp\\scoped_dir14208_1439542281"},"goog:chromeOptions":{"debuggerAddress":"localhost:61006"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:virtualAuthenticators":true},"sessionId":"34bbb6ec434440f407638367387c3bf6"}} | headers=HTTPHeaderDict({'Content-Length': '791', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:45:16,523 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:45:16,534 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:61003/session/34bbb6ec434440f407638367387c3bf6/url {"url": "https://www.futboleras.es/unete.html"}
2023-03-08 13:45:19,020 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:61003 "POST /session/34bbb6ec434440f407638367387c3bf6/url HTTP/1.1" 200 14
2023-03-08 13:45:19,021 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:45:19,021 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:45:50,733 [22500] DEBUG    selenium.webdriver.common.service:204: [JupyterRequire] Started executable: `C:\Users\mocus\.wdm\drivers\chromedriver\win32\110.0.5481\chromedriver.exe` in a child process with pid: 24544
2023-03-08 13:45:51,239 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:61091/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "pageLoadStrategy": "normal", "goog:chromeOptions": {"extensions": [], "args": []}}}}
2023-03-08 13:45:51,240 [22500] DEBUG    urllib3.connectionpool:228: [JupyterRequire] Starting new HTTP connection (1): localhost:61091
2023-03-08 13:45:51,871 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:61091 "POST /session HTTP/1.1" 200 790
2023-03-08 13:45:51,872 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"110.0.5481.178","chrome":{"chromedriverVersion":"110.0.5481.77 (65ed616c6e8ee3fe0ad64fe83796c020644d42af-refs/branch-heads/5481@{#839})","userDataDir":"C:\\Users\\mocus\\AppData\\Local\\Temp\\scoped_dir24544_675382314"},"goog:chromeOptions":{"debuggerAddress":"localhost:61108"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:virtualAuthenticators":true},"sessionId":"6b66fad9a3061b2bc136bb375ce8ac89"}} | headers=HTTPHeaderDict({'Content-Length': '790', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:45:51,872 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:45:53,894 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:61091/session/6b66fad9a3061b2bc136bb375ce8ac89/url {"url": "https://www.futboleras.es/liga-f-futbol-femenino.htmlhttps://www.futboleras.es/liga-f-futbol-femenino.html"}
2023-03-08 13:45:57,718 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:61091 "POST /session/6b66fad9a3061b2bc136bb375ce8ac89/url HTTP/1.1" 200 14
2023-03-08 13:45:57,720 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:45:57,721 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:46:02,727 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:61091/session/6b66fad9a3061b2bc136bb375ce8ac89/element {"using": "xpath", "value": "//*[@id=\"qc-cmp2-ui\"]/div[2]/div/button[2]"}
2023-03-08 13:46:02,745 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:61091 "POST /session/6b66fad9a3061b2bc136bb375ce8ac89/element HTTP/1.1" 200 88
2023-03-08 13:46:02,746 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"d24eb818-267f-467f-8722-5cf2e12596fd"}} | headers=HTTPHeaderDict({'Content-Length': '88', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:46:02,746 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:46:02,746 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:61091/session/6b66fad9a3061b2bc136bb375ce8ac89/element/d24eb818-267f-467f-8722-5cf2e12596fd/click {"id": "d24eb818-267f-467f-8722-5cf2e12596fd"}
2023-03-08 13:46:02,880 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:61091 "POST /session/6b66fad9a3061b2bc136bb375ce8ac89/element/d24eb818-267f-467f-8722-5cf2e12596fd/click HTTP/1.1" 200 14
2023-03-08 13:46:02,881 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:46:02,881 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:47:08,741 [22500] DEBUG    selenium.webdriver.common.service:204: [JupyterRequire] Started executable: `C:\Users\mocus\.wdm\drivers\chromedriver\win32\110.0.5481\chromedriver.exe` in a child process with pid: 28140
2023-03-08 13:47:09,249 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:61763/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "pageLoadStrategy": "normal", "goog:chromeOptions": {"extensions": [], "args": []}}}}
2023-03-08 13:47:09,250 [22500] DEBUG    urllib3.connectionpool:228: [JupyterRequire] Starting new HTTP connection (1): localhost:61763
2023-03-08 13:47:09,853 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:61763 "POST /session HTTP/1.1" 200 791
2023-03-08 13:47:09,853 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"110.0.5481.178","chrome":{"chromedriverVersion":"110.0.5481.77 (65ed616c6e8ee3fe0ad64fe83796c020644d42af-refs/branch-heads/5481@{#839})","userDataDir":"C:\\Users\\mocus\\AppData\\Local\\Temp\\scoped_dir28140_1380806726"},"goog:chromeOptions":{"debuggerAddress":"localhost:61767"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:virtualAuthenticators":true},"sessionId":"c872d9e5b18bab1b7fb97d6e8f142715"}} | headers=HTTPHeaderDict({'Content-Length': '791', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:47:09,853 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:47:11,939 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:61763/session/c872d9e5b18bab1b7fb97d6e8f142715/url {"url": "https://www.futboleras.es/liga-f-futbol-femenino.html"}
2023-03-08 13:47:14,713 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:61763 "POST /session/c872d9e5b18bab1b7fb97d6e8f142715/url HTTP/1.1" 200 14
2023-03-08 13:47:14,713 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:47:14,713 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:47:19,724 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:61763/session/c872d9e5b18bab1b7fb97d6e8f142715/element {"using": "xpath", "value": "//*[@id=\"qc-cmp2-ui\"]/div[2]/div/button[2]"}
2023-03-08 13:47:19,744 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:61763 "POST /session/c872d9e5b18bab1b7fb97d6e8f142715/element HTTP/1.1" 200 88
2023-03-08 13:47:19,744 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"2194bbbe-e77b-4f83-bba3-36507d7b5e2b"}} | headers=HTTPHeaderDict({'Content-Length': '88', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:47:19,745 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:47:19,745 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:61763/session/c872d9e5b18bab1b7fb97d6e8f142715/element/2194bbbe-e77b-4f83-bba3-36507d7b5e2b/click {"id": "2194bbbe-e77b-4f83-bba3-36507d7b5e2b"}
2023-03-08 13:47:19,873 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:61763 "POST /session/c872d9e5b18bab1b7fb97d6e8f142715/element/2194bbbe-e77b-4f83-bba3-36507d7b5e2b/click HTTP/1.1" 200 14
2023-03-08 13:47:19,874 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:47:19,874 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:47:19,885 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:61763/session/c872d9e5b18bab1b7fb97d6e8f142715/element {"using": "xpath", "value": "//*[@id=\"websiteMenuWrapper\"]/a[2]"}
2023-03-08 13:47:19,926 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:61763 "POST /session/c872d9e5b18bab1b7fb97d6e8f142715/element HTTP/1.1" 200 88
2023-03-08 13:47:19,926 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"997b33fc-063a-4748-ad04-3986def8c0a2"}} | headers=HTTPHeaderDict({'Content-Length': '88', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:47:19,927 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:47:19,927 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:61763/session/c872d9e5b18bab1b7fb97d6e8f142715/element/997b33fc-063a-4748-ad04-3986def8c0a2/click {"id": "997b33fc-063a-4748-ad04-3986def8c0a2"}
2023-03-08 13:47:37,929 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:61763 "POST /session/c872d9e5b18bab1b7fb97d6e8f142715/element/997b33fc-063a-4748-ad04-3986def8c0a2/click HTTP/1.1" 200 14
2023-03-08 13:47:37,932 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:47:37,932 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:51:26,055 [22500] DEBUG    selenium.webdriver.common.service:204: [JupyterRequire] Started executable: `C:\Users\mocus\.wdm\drivers\chromedriver\win32\110.0.5481\chromedriver.exe` in a child process with pid: 9504
2023-03-08 13:51:26,559 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:63418/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "pageLoadStrategy": "normal", "goog:chromeOptions": {"extensions": [], "args": []}}}}
2023-03-08 13:51:26,560 [22500] DEBUG    urllib3.connectionpool:228: [JupyterRequire] Starting new HTTP connection (1): localhost:63418
2023-03-08 13:51:27,160 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:63418 "POST /session HTTP/1.1" 200 790
2023-03-08 13:51:27,160 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"110.0.5481.178","chrome":{"chromedriverVersion":"110.0.5481.77 (65ed616c6e8ee3fe0ad64fe83796c020644d42af-refs/branch-heads/5481@{#839})","userDataDir":"C:\\Users\\mocus\\AppData\\Local\\Temp\\scoped_dir9504_2055756512"},"goog:chromeOptions":{"debuggerAddress":"localhost:63422"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:virtualAuthenticators":true},"sessionId":"bb9b267afe5bcc97bf811eb9d3725267"}} | headers=HTTPHeaderDict({'Content-Length': '790', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:51:27,161 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:51:31,231 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:63418/session/bb9b267afe5bcc97bf811eb9d3725267/url {"url": "https://www.futboleras.es/liga-f-futbol-femenino.html"}
2023-03-08 13:51:34,061 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:63418 "POST /session/bb9b267afe5bcc97bf811eb9d3725267/url HTTP/1.1" 200 14
2023-03-08 13:51:34,062 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:51:34,062 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:52:12,224 [22500] DEBUG    selenium.webdriver.common.service:204: [JupyterRequire] Started executable: `C:\Users\mocus\.wdm\drivers\chromedriver\win32\110.0.5481\chromedriver.exe` in a child process with pid: 10832
2023-03-08 13:52:12,738 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:63513/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "pageLoadStrategy": "normal", "goog:chromeOptions": {"extensions": [], "args": []}}}}
2023-03-08 13:52:12,740 [22500] DEBUG    urllib3.connectionpool:228: [JupyterRequire] Starting new HTTP connection (1): localhost:63513
2023-03-08 13:52:13,301 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:63513 "POST /session HTTP/1.1" 200 791
2023-03-08 13:52:13,302 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"110.0.5481.178","chrome":{"chromedriverVersion":"110.0.5481.77 (65ed616c6e8ee3fe0ad64fe83796c020644d42af-refs/branch-heads/5481@{#839})","userDataDir":"C:\\Users\\mocus\\AppData\\Local\\Temp\\scoped_dir10832_1120593228"},"goog:chromeOptions":{"debuggerAddress":"localhost:63518"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:virtualAuthenticators":true},"sessionId":"2d1706691246efe942309bdc6341454f"}} | headers=HTTPHeaderDict({'Content-Length': '791', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:52:13,302 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 13:52:15,326 [22500] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:63513/session/2d1706691246efe942309bdc6341454f/url {"url": "https://www.futboleras.es/liga-f-futbol-femenino.html"}
2023-03-08 13:52:18,447 [22500] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:63513 "POST /session/2d1706691246efe942309bdc6341454f/url HTTP/1.1" 200 14
2023-03-08 13:52:18,448 [22500] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-08 13:52:18,448 [22500] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-08 14:39:31,594 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-08 14:39:31,594 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-08 14:39:31,595 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-08 14:39:31,601 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-08 14:39:31,602 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-08 14:39:31,603 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-08 15:33:35,467 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-08 15:33:35,468 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-08 15:33:35,468 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-08 15:33:35,473 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-08 15:33:35,473 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-08 15:33:35,474 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-08 16:07:12,797 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-08 16:07:12,799 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-08 16:07:12,799 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-08 16:07:12,801 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-08 16:07:12,801 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-08 16:07:12,801 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-08 16:07:16,199 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-08 16:07:16,200 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-08 16:07:16,200 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-08 16:07:16,202 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-08 16:07:16,203 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-08 16:07:16,203 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-08 16:07:21,477 [15572] INFO     numexpr.utils:160: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-03-08 17:22:07,428 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-08 17:22:07,441 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-08 17:22:07,442 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-08 17:22:07,490 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-08 17:22:07,492 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-08 17:22:07,492 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-08 17:22:07,562 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-08 17:22:07,564 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-08 17:22:07,566 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-08 17:22:07,598 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-08 17:22:07,605 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-08 17:22:07,607 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-08 17:51:39,503 [15572] DEBUG    urllib3.connectionpool:1003: [JupyterRequire] Starting new HTTPS connection (1): www.futboleras.es:443
2023-03-08 17:51:40,124 [15572] DEBUG    urllib3.connectionpool:456: [JupyterRequire] https://www.futboleras.es:443 "GET /liga-f-futbol-femenino.html HTTP/1.1" 200 None
2023-03-08 17:54:41,439 [15572] DEBUG    urllib3.connectionpool:1003: [JupyterRequire] Starting new HTTPS connection (1): www.futboleras.es:443
2023-03-08 17:54:41,860 [15572] DEBUG    urllib3.connectionpool:456: [JupyterRequire] https://www.futboleras.es:443 "GET /liga-f-futbol-femenino.html HTTP/1.1" 200 None
2023-03-08 17:55:54,677 [15572] DEBUG    urllib3.connectionpool:1003: [JupyterRequire] Starting new HTTPS connection (1): www.futboleras.es:443
2023-03-08 17:55:55,175 [15572] DEBUG    urllib3.connectionpool:456: [JupyterRequire] https://www.futboleras.es:443 "GET /liga-f-futbol-femenino.html HTTP/1.1" 200 None
2023-03-08 17:56:06,280 [15572] DEBUG    urllib3.connectionpool:1003: [JupyterRequire] Starting new HTTPS connection (1): www.futboleras.es:443
2023-03-08 17:56:06,673 [15572] DEBUG    urllib3.connectionpool:456: [JupyterRequire] https://www.futboleras.es:443 "GET /liga-f-futbol-femenino.html HTTP/1.1" 200 None
2023-03-08 17:56:06,884 [15572] DEBUG    urllib3.connectionpool:1003: [JupyterRequire] Starting new HTTPS connection (1): www.futboleras.es:443
2023-03-08 17:56:07,269 [15572] DEBUG    urllib3.connectionpool:456: [JupyterRequire] https://www.futboleras.es:443 "GET /liga-f-futbol-femenino.html HTTP/1.1" 200 None
2023-03-08 17:58:00,254 [15572] DEBUG    urllib3.connectionpool:1003: [JupyterRequire] Starting new HTTPS connection (1): www.futboleras.es:443
2023-03-08 17:58:00,638 [15572] DEBUG    urllib3.connectionpool:456: [JupyterRequire] https://www.futboleras.es:443 "GET /liga-f-futbol-femenino.html HTTP/1.1" 200 None
2023-03-08 18:02:25,166 [19528] DEBUG    urllib3.connectionpool:1003: [JupyterRequire] Starting new HTTPS connection (1): www.futboleras.es:443
2023-03-08 18:02:25,740 [19528] DEBUG    urllib3.connectionpool:456: [JupyterRequire] https://www.futboleras.es:443 "GET /liga-f-futbol-femenino.html HTTP/1.1" 200 None
2023-03-08 18:02:28,852 [19528] DEBUG    urllib3.connectionpool:1003: [JupyterRequire] Starting new HTTPS connection (1): www.futboleras.es:443
2023-03-08 18:02:29,349 [19528] DEBUG    urllib3.connectionpool:456: [JupyterRequire] https://www.futboleras.es:443 "GET /liga-f-futbol-femenino.html HTTP/1.1" 200 None
2023-03-08 18:04:12,871 [19528] DEBUG    urllib3.connectionpool:1003: [JupyterRequire] Starting new HTTPS connection (1): www.futboleras.es:443
2023-03-08 18:04:13,417 [19528] DEBUG    urllib3.connectionpool:456: [JupyterRequire] https://www.futboleras.es:443 "GET /liga-f-futbol-femenino.html HTTP/1.1" 200 None
2023-03-08 19:14:52,795 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-08 19:14:52,801 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-08 19:14:52,804 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-08 19:14:52,829 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-08 19:14:52,832 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-08 19:14:52,833 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-08 19:16:36,048 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-08 19:16:36,050 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-08 19:16:36,050 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-08 19:16:36,066 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-08 19:16:36,067 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-08 19:16:36,068 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-08 20:48:35,491 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-08 20:48:35,492 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-08 20:48:35,492 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-08 20:48:35,498 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-08 20:48:35,500 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-08 20:48:35,500 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-08 20:48:35,508 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-08 20:48:35,509 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-08 20:48:35,509 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-08 20:48:35,515 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-08 20:48:35,516 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-08 20:48:35,516 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-08 20:59:49,426 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-08 20:59:49,426 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-08 20:59:49,426 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-08 20:59:49,430 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-08 20:59:49,430 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-08 20:59:49,431 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-08 20:59:49,466 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-08 20:59:49,466 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-08 20:59:49,467 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-08 20:59:49,469 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-08 20:59:49,469 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-08 20:59:49,470 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 00:56:51,797 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 00:56:51,797 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 00:56:51,798 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 00:56:51,803 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 00:56:51,803 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 00:56:51,805 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 00:56:51,882 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 00:56:51,882 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 00:56:51,883 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 00:56:51,888 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 00:56:51,889 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 00:56:51,889 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 01:38:53,470 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 01:38:53,471 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 01:38:53,471 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 01:38:53,475 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 01:38:53,476 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 01:38:53,476 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 01:38:53,504 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 01:38:53,505 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 01:38:53,505 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 01:38:53,509 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 01:38:53,511 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 01:38:53,511 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 01:39:31,443 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 01:39:31,444 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 01:39:31,444 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 01:39:31,449 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 01:39:31,450 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 01:39:31,451 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 01:39:31,534 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 01:39:31,534 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 01:39:31,534 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 01:39:31,542 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 01:39:31,544 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 01:39:31,544 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 01:40:34,459 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 01:40:34,459 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 01:40:34,459 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 01:40:34,462 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 01:40:34,464 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 01:40:34,465 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 01:40:34,466 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 01:40:34,466 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 01:40:34,466 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 01:40:34,473 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 01:40:34,474 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 01:40:34,476 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 01:52:43,398 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 01:52:43,398 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 01:52:43,399 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 01:52:43,407 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 01:52:43,408 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 01:52:43,408 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 01:52:43,934 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 01:52:43,934 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 01:52:43,934 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 01:52:43,936 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 01:52:43,937 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 01:52:43,938 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 01:52:44,410 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 01:52:44,410 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 01:52:44,410 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 01:52:44,413 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 01:52:44,415 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 01:52:44,415 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 01:58:28,411 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 01:58:28,411 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 01:58:28,411 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 01:58:28,414 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 01:58:28,415 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 01:58:28,415 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 01:58:28,431 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 01:58:28,431 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 01:58:28,431 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 01:58:28,434 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 01:58:28,435 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 01:58:28,436 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 08:31:08,100 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 08:31:08,100 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 08:31:08,100 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 08:31:08,102 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 08:31:08,105 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 08:31:08,105 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 08:31:08,109 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 08:31:08,109 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 08:31:08,109 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 08:31:08,112 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 08:31:08,113 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 08:31:08,113 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 08:31:41,351 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 08:31:41,352 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 08:31:41,352 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 08:31:41,353 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 08:31:41,354 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 08:31:41,354 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 08:31:41,354 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 08:31:41,357 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 08:31:41,357 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 08:31:41,358 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 08:31:41,360 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 08:31:41,361 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 08:47:54,312 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 08:47:54,312 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 08:47:54,313 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 08:47:54,315 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 08:47:54,317 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 08:47:54,317 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 08:47:54,333 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 08:47:54,334 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 08:47:54,334 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 08:47:54,337 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 08:47:54,339 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 08:47:54,339 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 08:53:07,283 [30900] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 08:53:07,283 [30900] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 08:53:07,283 [30900] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 08:53:07,285 [30900] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 08:53:07,286 [30900] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 08:53:07,286 [30900] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 08:53:08,063 [30900] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 08:53:08,064 [30900] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 08:53:08,064 [30900] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 08:53:08,067 [30900] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 08:53:08,068 [30900] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 08:53:08,068 [30900] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 08:53:11,990 [30900] INFO     numexpr.utils:160: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-03-09 09:23:12,209 [15572] DEBUG    urllib3.connectionpool:1003: [JupyterRequire] Starting new HTTPS connection (1): www.futboleras.es:443
2023-03-09 09:23:16,062 [15572] DEBUG    urllib3.connectionpool:456: [JupyterRequire] https://www.futboleras.es:443 "GET /liga-f-futbol-femenino.html HTTP/1.1" 200 None
2023-03-09 09:23:26,392 [19528] INFO     WDM:11: [JupyterRequire] ====== WebDriver manager ======
2023-03-09 09:23:27,392 [19528] INFO     WDM:11: [JupyterRequire] Get LATEST chromedriver version for google-chrome 110.0.5481
2023-03-09 09:23:27,450 [19528] DEBUG    urllib3.connectionpool:1003: [JupyterRequire] Starting new HTTPS connection (1): chromedriver.storage.googleapis.com:443
2023-03-09 09:23:27,602 [19528] DEBUG    urllib3.connectionpool:456: [JupyterRequire] https://chromedriver.storage.googleapis.com:443 "GET /LATEST_RELEASE_110.0.5481 HTTP/1.1" 200 13
2023-03-09 09:23:28,405 [19528] INFO     WDM:11: [JupyterRequire] About to download new driver from https://chromedriver.storage.googleapis.com/110.0.5481.77/chromedriver_win32.zip
2023-03-09 09:23:28,409 [19528] DEBUG    urllib3.connectionpool:1003: [JupyterRequire] Starting new HTTPS connection (1): chromedriver.storage.googleapis.com:443
2023-03-09 09:23:28,592 [19528] DEBUG    urllib3.connectionpool:456: [JupyterRequire] https://chromedriver.storage.googleapis.com:443 "GET /110.0.5481.77/chromedriver_win32.zip HTTP/1.1" 200 7106644
2023-03-09 09:23:29,776 [19528] INFO     WDM:11: [JupyterRequire] Driver has been saved in cache [C:\Users\mocus\.wdm\drivers\chromedriver\win32\110.0.5481]
2023-03-09 09:23:30,327 [19528] DEBUG    selenium.webdriver.common.service:204: [JupyterRequire] Started executable: `C:\Users\mocus\.wdm\drivers\chromedriver\win32\110.0.5481\chromedriver.exe` in a child process with pid: 7508
2023-03-09 09:23:30,876 [19528] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:64840/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "pageLoadStrategy": "normal", "goog:chromeOptions": {"extensions": [], "args": []}}}}
2023-03-09 09:23:30,877 [19528] DEBUG    urllib3.connectionpool:228: [JupyterRequire] Starting new HTTP connection (1): localhost:64840
2023-03-09 09:23:31,647 [19528] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:64840 "POST /session HTTP/1.1" 200 789
2023-03-09 09:23:31,647 [19528] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"110.0.5481.178","chrome":{"chromedriverVersion":"110.0.5481.77 (65ed616c6e8ee3fe0ad64fe83796c020644d42af-refs/branch-heads/5481@{#839})","userDataDir":"C:\\Users\\mocus\\AppData\\Local\\Temp\\scoped_dir7508_583814125"},"goog:chromeOptions":{"debuggerAddress":"localhost:64845"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:virtualAuthenticators":true},"sessionId":"e6d007b2c5af5849b3fbf1f80244eb45"}} | headers=HTTPHeaderDict({'Content-Length': '789', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-09 09:23:31,648 [19528] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-09 09:23:31,655 [19528] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:64840/session/e6d007b2c5af5849b3fbf1f80244eb45/url {"url": "https://www.futboleras.es/unete.html"}
2023-03-09 09:23:32,503 [19528] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:64840 "POST /session/e6d007b2c5af5849b3fbf1f80244eb45/url HTTP/1.1" 200 14
2023-03-09 09:23:32,503 [19528] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-09 09:23:32,504 [19528] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-09 09:23:37,551 [19528] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:64840/session/e6d007b2c5af5849b3fbf1f80244eb45/element {"using": "xpath", "value": "//*[@id=\"qc-cmp2-ui\"]/div[2]/div/button[2]/span"}
2023-03-09 09:23:37,567 [19528] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:64840 "POST /session/e6d007b2c5af5849b3fbf1f80244eb45/element HTTP/1.1" 200 88
2023-03-09 09:23:37,569 [19528] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":{"element-6066-11e4-a52e-4f735466cecf":"6778807a-829a-4ec8-aa31-0b2a4a020c1c"}} | headers=HTTPHeaderDict({'Content-Length': '88', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-09 09:23:37,570 [19528] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-09 09:23:37,572 [19528] DEBUG    selenium.webdriver.remote.remote_connection:303: [JupyterRequire] POST http://localhost:64840/session/e6d007b2c5af5849b3fbf1f80244eb45/element/6778807a-829a-4ec8-aa31-0b2a4a020c1c/click {"id": "6778807a-829a-4ec8-aa31-0b2a4a020c1c"}
2023-03-09 09:23:37,712 [19528] DEBUG    urllib3.connectionpool:456: [JupyterRequire] http://localhost:64840 "POST /session/e6d007b2c5af5849b3fbf1f80244eb45/element/6778807a-829a-4ec8-aa31-0b2a4a020c1c/click HTTP/1.1" 200 14
2023-03-09 09:23:37,712 [19528] DEBUG    selenium.webdriver.remote.remote_connection:319: [JupyterRequire] Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
2023-03-09 09:23:37,712 [19528] DEBUG    selenium.webdriver.remote.remote_connection:347: [JupyterRequire] Finished Request
2023-03-09 09:23:56,741 [19528] DEBUG    urllib3.connectionpool:1003: [JupyterRequire] Starting new HTTPS connection (1): www.futboleras.es:443
2023-03-09 09:23:57,191 [19528] DEBUG    urllib3.connectionpool:456: [JupyterRequire] https://www.futboleras.es:443 "GET /liga-f-futbol-femenino.html HTTP/1.1" 200 None
2023-03-09 09:30:06,058 [30900] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 09:30:06,059 [30900] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 09:30:06,060 [30900] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 09:30:06,064 [30900] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 09:30:06,064 [30900] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 09:30:06,064 [30900] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 09:30:06,322 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 09:30:06,322 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 09:30:06,322 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 09:30:06,330 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 09:30:06,331 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 09:30:06,332 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 09:30:06,367 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 09:30:06,367 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 09:30:06,369 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 09:30:06,381 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 09:30:06,383 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 09:30:06,383 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 09:38:15,004 [17900] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 09:38:15,004 [17900] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 09:38:15,004 [17900] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 09:38:15,006 [17900] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 09:38:15,007 [17900] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 09:38:15,007 [17900] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 09:42:32,254 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 09:42:32,254 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 09:42:32,254 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 09:42:32,255 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 09:42:32,255 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 09:42:32,256 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 09:55:18,326 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 09:55:18,326 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 09:55:18,326 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 09:55:18,329 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 09:55:18,330 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 09:55:18,330 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 09:55:18,449 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 09:55:18,450 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 09:55:18,450 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 09:55:18,455 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 09:55:18,455 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 09:55:18,456 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 09:55:18,456 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 09:55:18,457 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 09:55:18,457 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 09:55:18,463 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 09:55:18,464 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 09:55:18,464 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 12:58:56,441 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 12:58:56,442 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 12:58:56,442 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 12:58:56,447 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 12:58:56,448 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 12:58:56,448 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 12:58:56,507 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 12:58:56,508 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 12:58:56,508 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 12:58:56,509 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 12:58:56,509 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 12:58:56,510 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 12:58:56,512 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 12:58:56,513 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 12:58:56,513 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 12:58:56,515 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 12:58:56,516 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 12:58:56,517 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 13:05:10,316 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 13:05:10,317 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 13:05:10,317 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 13:05:10,321 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 13:05:10,322 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 13:05:10,322 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 13:05:10,346 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 13:05:10,347 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 13:05:10,347 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 13:05:10,354 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 13:05:10,355 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 13:05:10,356 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 13:05:10,371 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 13:05:10,371 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 13:05:10,371 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 13:05:10,375 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 13:05:10,376 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 13:05:10,377 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 13:35:38,335 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 13:35:38,335 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 13:35:38,336 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 13:35:38,341 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 13:35:38,341 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 13:35:38,342 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 13:35:38,372 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 13:35:38,372 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 13:35:38,372 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 13:35:38,375 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 13:35:38,376 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 13:35:38,376 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 13:35:38,380 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 13:35:38,380 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 13:35:38,380 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 13:35:38,383 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 13:35:38,384 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 13:35:38,384 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 13:38:10,486 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 13:38:10,486 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 13:38:10,486 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 13:38:10,491 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 13:38:10,493 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 13:38:10,493 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 13:38:10,509 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 13:38:10,510 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 13:38:10,510 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 13:38:10,510 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 13:38:10,510 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 13:38:10,511 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 13:38:10,517 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 13:38:10,518 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 13:38:10,519 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 13:38:10,519 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 13:38:10,519 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 13:38:10,520 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 14:02:04,415 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 14:02:04,416 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 14:02:04,416 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 14:02:04,421 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 14:02:04,423 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 14:02:04,424 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 14:02:04,433 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 14:02:04,433 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 14:02:04,434 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 14:02:04,437 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 14:02:04,439 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 14:02:04,439 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 14:02:04,447 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 14:02:04,447 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 14:02:04,447 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 14:02:04,451 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 14:02:04,452 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 14:02:04,452 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 14:20:37,343 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 14:20:37,344 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 14:20:37,344 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 14:20:37,351 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 14:20:37,352 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 14:20:37,352 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 14:20:37,372 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 14:20:37,373 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 14:20:37,373 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 14:20:37,376 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 14:20:37,379 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 14:20:37,379 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 14:20:37,391 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 14:20:37,391 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 14:20:37,391 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 14:20:37,399 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 14:20:37,400 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 14:20:37,400 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 14:52:40,314 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 14:52:40,314 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 14:52:40,314 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 14:52:40,317 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 14:52:40,317 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 14:52:40,318 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 14:52:40,327 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 14:52:40,328 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 14:52:40,328 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 14:52:40,331 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 14:52:40,332 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 14:52:40,333 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 14:52:40,354 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 14:52:40,354 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 14:52:40,354 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 14:52:40,357 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 14:52:40,358 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 14:52:40,359 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 15:55:57,675 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 15:55:57,677 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 15:55:57,678 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 15:55:57,684 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 15:55:57,685 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 15:55:57,687 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 15:55:57,750 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 15:55:57,752 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 15:55:57,752 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 15:55:57,757 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 15:55:57,758 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 15:55:57,758 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 15:55:57,793 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 15:55:57,794 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 15:55:57,794 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 15:55:57,801 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 15:55:57,802 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 15:55:57,803 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 16:45:00,601 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 16:45:00,602 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 16:45:00,603 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 16:45:00,608 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 16:45:00,610 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 16:45:00,610 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 16:45:00,624 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 16:45:00,624 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 16:45:00,624 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 16:45:00,626 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-09 16:45:00,626 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-09 16:45:00,626 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-09 16:45:00,630 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 16:45:00,630 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 16:45:00,630 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-09 16:45:00,631 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-09 16:45:00,632 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-09 16:45:00,632 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-10 11:37:34,095 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-10 11:37:34,095 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-10 11:37:34,096 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-10 11:37:34,099 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-10 11:37:34,101 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-10 11:37:34,101 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-10 11:37:34,145 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-10 11:37:34,146 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-10 11:37:34,146 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-10 11:37:34,150 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-10 11:37:34,153 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-10 11:37:34,155 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-10 11:37:34,188 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-10 11:37:34,189 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-10 11:37:34,189 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-10 11:37:34,192 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-10 11:37:34,193 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-10 11:37:34,194 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-10 11:57:00,017 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-10 11:57:00,018 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-10 11:57:00,018 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-10 11:57:00,022 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-10 11:57:00,023 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-10 11:57:00,024 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-10 11:57:00,048 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-10 11:57:00,049 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-10 11:57:00,049 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-10 11:57:00,059 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-10 11:57:00,063 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-10 11:57:00,063 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-10 11:57:00,063 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-10 11:57:00,064 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-10 11:57:00,064 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-10 11:57:00,069 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-10 11:57:00,073 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-10 11:57:00,074 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-10 12:32:23,772 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-10 12:32:23,772 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-10 12:32:23,773 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-10 12:32:23,775 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-10 12:32:23,777 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-10 12:32:23,777 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-10 12:32:23,795 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-10 12:32:23,795 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-10 12:32:23,796 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-10 12:32:23,800 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-10 12:32:23,801 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-10 12:32:23,801 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-10 12:32:23,813 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-10 12:32:23,813 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-10 12:32:23,814 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-10 12:32:23,816 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-10 12:32:23,817 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-10 12:32:23,817 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-11 18:15:05,437 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-11 18:15:05,438 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-11 18:15:05,439 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-11 18:15:05,443 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-11 18:15:05,444 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-11 18:15:05,445 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-11 18:15:06,062 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-11 18:15:06,062 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-11 18:15:06,063 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-11 18:15:06,068 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-11 18:15:06,069 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-11 18:15:06,070 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-11 18:15:06,157 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-11 18:15:06,157 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-11 18:15:06,157 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-11 18:15:06,162 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-11 18:15:06,163 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-11 18:15:06,163 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-11 18:47:30,081 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-11 18:47:30,083 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-11 18:47:30,083 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-11 18:47:30,089 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-11 18:47:30,090 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-11 18:47:30,090 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-11 18:47:30,136 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-11 18:47:30,137 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-11 18:47:30,137 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-11 18:47:30,141 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-11 18:47:30,142 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-11 18:47:30,143 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-11 18:47:30,155 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-11 18:47:30,155 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-11 18:47:30,155 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-11 18:47:30,162 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-11 18:47:30,163 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-11 18:47:30,164 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-11 21:19:10,693 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-11 21:19:10,696 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-11 21:19:10,698 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-11 21:19:10,727 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-11 21:19:10,733 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-11 21:19:10,734 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-11 21:19:10,776 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-11 21:19:10,785 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-11 21:19:10,788 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-11 21:19:10,783 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-11 21:19:10,791 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-11 21:19:10,793 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-11 21:19:10,833 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-11 21:19:10,836 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-11 21:19:10,839 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-11 21:19:10,869 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-11 21:19:10,870 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-11 21:19:10,871 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-11 22:45:24,293 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-11 22:45:24,293 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-11 22:45:24,293 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-11 22:45:24,300 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-11 22:45:24,302 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-11 22:45:24,302 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-11 22:45:24,339 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-11 22:45:24,341 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-11 22:45:24,341 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-11 22:45:24,346 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-11 22:45:24,348 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-11 22:45:24,348 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-11 22:45:24,348 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-11 22:45:24,348 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-11 22:45:24,349 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-11 22:45:24,353 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-11 22:45:24,353 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-11 22:45:24,353 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-11 22:57:20,437 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-11 22:57:20,438 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-11 22:57:20,438 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-11 22:57:20,443 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-11 22:57:20,443 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-11 22:57:20,444 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-11 22:57:20,460 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-11 22:57:20,460 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-11 22:57:20,461 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-11 22:57:20,463 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-11 22:57:20,464 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-11 22:57:20,466 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-11 22:57:20,468 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-11 22:57:20,468 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-11 22:57:20,468 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-11 22:57:20,475 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-11 22:57:20,477 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-11 22:57:20,478 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-12 00:37:09,393 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-12 00:37:09,393 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-12 00:37:09,394 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-12 00:37:09,397 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-12 00:37:09,398 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-12 00:37:09,399 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-12 00:37:09,421 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-12 00:37:09,422 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-12 00:37:09,422 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-12 00:37:09,426 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-12 00:37:09,428 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-12 00:37:09,428 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-12 00:37:09,443 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-12 00:37:09,443 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-12 00:37:09,443 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-12 00:37:09,447 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-12 00:37:09,448 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-12 00:37:09,448 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-12 00:37:13,777 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-12 00:37:13,777 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-12 00:37:13,778 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-12 00:37:13,780 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-12 00:37:13,781 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-12 00:37:13,781 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-12 00:37:13,802 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-12 00:37:13,802 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-12 00:37:13,803 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-12 00:37:13,806 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-12 00:37:13,807 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-12 00:37:13,809 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-12 00:37:13,835 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-12 00:37:13,835 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-12 00:37:13,836 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-12 00:37:13,842 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-12 00:37:13,843 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-12 00:37:13,844 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-12 00:59:53,092 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-12 00:59:53,093 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-12 00:59:53,093 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-12 00:59:53,096 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-12 00:59:53,099 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-12 00:59:53,099 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-12 00:59:53,112 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-12 00:59:53,112 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-12 00:59:53,112 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-12 00:59:53,116 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-12 00:59:53,118 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-12 00:59:53,118 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-12 00:59:53,133 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-12 00:59:53,133 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-12 00:59:53,133 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-12 00:59:53,135 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-12 00:59:53,135 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-12 00:59:53,136 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-12 01:12:42,046 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-12 01:12:42,046 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-12 01:12:42,047 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-12 01:12:42,050 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-12 01:12:42,051 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-12 01:12:42,051 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-12 01:12:43,113 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-12 01:12:43,113 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-12 01:12:43,114 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-12 01:12:43,118 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-12 01:12:43,120 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-12 01:12:43,121 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-12 01:12:43,131 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-12 01:12:43,131 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-12 01:12:43,132 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-12 01:12:43,134 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-12 01:12:43,137 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-12 01:12:43,138 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-12 08:06:49,298 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-12 08:06:49,299 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-12 08:06:49,299 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-12 08:06:49,302 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-12 08:06:49,303 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-12 08:06:49,303 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-12 08:06:49,319 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-12 08:06:49,319 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-12 08:06:49,320 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-12 08:06:49,322 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-12 08:06:49,323 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-12 08:06:49,323 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-12 08:06:49,333 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-12 08:06:49,333 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-12 08:06:49,334 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-12 08:06:49,337 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-12 08:06:49,337 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-12 08:06:49,338 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-12 12:48:37,137 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-12 12:48:37,138 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-12 12:48:37,138 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-12 12:48:37,142 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-12 12:48:37,144 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-12 12:48:37,145 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-12 12:48:37,179 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-12 12:48:37,179 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-12 12:48:37,180 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-12 12:48:37,188 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-12 12:48:37,189 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-12 12:48:37,190 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-12 12:48:37,203 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-12 12:48:37,204 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-12 12:48:37,205 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-12 12:48:37,212 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-12 12:48:37,212 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-12 12:48:37,213 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 10:18:01,168 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 10:18:01,169 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 10:18:01,169 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 10:18:01,175 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 10:18:01,177 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 10:18:01,178 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 10:18:01,204 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 10:18:01,204 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 10:18:01,205 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 10:18:01,207 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 10:18:01,208 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 10:18:01,209 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 10:18:01,210 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 10:18:01,211 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 10:18:01,211 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 10:18:01,217 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 10:18:01,218 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 10:18:01,219 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 15:35:42,765 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 15:35:42,765 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 15:35:42,766 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 15:35:42,771 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 15:35:42,772 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 15:35:42,773 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 15:35:42,836 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 15:35:42,837 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 15:35:42,838 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 15:35:42,846 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 15:35:42,847 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 15:35:42,847 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 15:35:42,847 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 15:35:42,848 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
ts.
2023-03-14 15:35:42,853 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 15:35:42,854 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 15:35:42,854 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 15:50:09,833 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 15:50:09,834 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 15:50:09,834 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 15:50:09,838 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 15:50:09,839 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 15:50:09,839 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 15:50:09,883 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 15:50:09,884 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 15:50:09,884 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 15:50:09,888 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 15:50:09,895 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 15:50:09,895 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 15:50:09,954 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 15:50:09,955 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 15:50:09,956 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 15:50:09,966 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 15:50:09,968 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 15:50:09,968 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 15:51:56,436 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 15:51:56,436 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 15:51:56,437 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 15:51:56,439 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 15:51:56,444 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 15:51:56,444 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 15:51:56,460 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 15:51:56,460 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 15:51:56,461 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 15:51:56,463 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 15:51:56,465 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 15:51:56,465 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 15:51:56,475 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 15:51:56,475 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 15:51:56,475 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 15:51:56,477 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 15:51:56,478 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 15:51:56,479 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 16:45:43,640 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 16:45:43,641 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 16:45:43,642 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 16:45:43,645 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 16:45:43,647 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 16:45:43,648 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 16:45:43,683 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 16:45:43,684 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 16:45:43,685 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 16:45:43,689 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 16:45:43,690 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 16:45:43,691 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 16:45:43,720 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 16:45:43,721 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 16:45:43,721 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 16:45:43,728 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 16:45:43,730 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 16:45:43,730 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 17:08:03,680 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 17:08:03,682 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 17:08:03,682 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 17:08:03,688 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 17:08:03,698 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 17:08:03,698 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 17:08:03,743 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 17:08:03,743 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 17:08:03,744 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 17:08:03,751 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 17:08:03,753 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 17:08:03,754 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 17:08:04,626 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 17:08:04,626 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 17:08:04,626 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 17:08:04,630 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 17:08:04,630 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 17:08:04,630 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 17:15:21,434 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 17:15:21,435 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 17:15:21,435 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 17:15:21,440 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 17:15:21,441 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 17:15:21,441 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 17:15:21,476 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 17:15:21,477 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 17:15:21,477 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 17:15:21,481 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 17:15:21,482 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 17:15:21,482 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 17:15:21,508 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 17:15:21,509 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 17:15:21,509 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 17:15:21,511 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 17:15:21,512 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 17:15:21,512 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 17:21:53,446 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 17:21:53,446 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 17:21:53,446 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 17:21:53,451 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 17:21:53,453 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 17:21:53,453 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 17:21:53,479 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 17:21:53,479 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 17:21:53,480 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 17:21:53,485 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 17:21:53,487 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 17:21:53,487 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 17:21:53,499 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 17:21:53,499 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 17:21:53,500 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 17:21:53,503 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 17:21:53,503 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 17:21:53,504 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 17:58:20,628 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 17:58:20,628 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 17:58:20,629 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 17:58:20,633 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 17:58:20,634 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 17:58:20,634 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 17:58:20,676 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 17:58:20,677 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 17:58:20,677 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 17:58:20,680 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 17:58:20,681 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 17:58:20,681 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 17:58:20,715 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 17:58:20,716 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 17:58:20,716 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 17:58:20,723 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 17:58:20,723 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 17:58:20,724 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 20:17:10,221 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 20:17:10,231 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 20:17:10,236 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 20:17:10,293 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 20:17:10,296 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 20:17:10,298 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 20:17:11,063 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 20:17:11,065 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 20:17:11,067 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 20:17:11,070 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 20:17:11,072 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 20:17:11,072 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 20:17:11,136 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 20:17:11,137 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 20:17:11,137 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 20:17:11,149 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 20:17:11,151 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 20:17:11,151 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 21:03:12,695 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 21:03:12,696 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 21:03:12,696 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 21:03:12,701 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 21:03:12,703 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 21:03:12,704 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 21:03:12,713 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 21:03:12,714 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 21:03:12,714 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 21:03:12,720 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 21:03:12,721 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 21:03:12,722 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-14 21:03:12,763 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-14 21:03:12,764 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-14 21:03:12,764 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-14 21:03:12,774 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-14 21:03:12,775 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-14 21:03:12,775 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 07:03:36,838 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 07:03:36,838 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 07:03:36,839 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 07:03:36,844 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 07:03:36,847 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 07:03:36,849 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 07:03:36,984 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 07:03:36,985 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 07:03:36,985 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 07:03:36,989 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 07:03:36,991 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 07:03:36,991 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 07:03:37,057 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 07:03:37,058 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 07:03:37,058 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 07:03:37,062 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 07:03:37,064 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 07:03:37,065 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 07:12:56,831 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 07:12:56,832 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 07:12:56,832 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 07:12:56,840 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 07:12:56,842 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 07:12:56,843 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 07:12:56,847 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 07:12:56,847 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 07:12:56,848 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 07:12:56,852 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 07:12:56,855 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 07:12:56,855 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 07:12:56,909 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 07:12:56,909 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 07:12:56,909 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 07:12:56,915 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 07:12:56,917 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 07:12:56,918 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 08:03:46,106 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 08:03:46,106 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 08:03:46,107 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 08:03:46,116 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 08:03:46,117 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 08:03:46,117 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 08:03:46,170 [19528] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 08:03:46,171 [19528] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 08:03:46,170 [15572] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 08:03:46,171 [19528] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 08:03:46,171 [15572] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 08:03:46,172 [15572] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 08:03:46,178 [19528] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 08:03:46,181 [19528] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 08:03:46,181 [19528] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 08:03:46,186 [15572] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 08:03:46,186 [15572] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 08:03:46,187 [15572] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 09:14:44,950 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 09:14:44,958 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 09:14:44,961 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 09:14:45,006 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 09:14:45,007 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 09:14:45,011 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 09:37:12,881 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 09:37:12,882 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 09:37:12,882 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 09:37:12,887 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 09:37:12,888 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 09:37:12,889 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 11:10:21,513 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 11:10:21,514 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 11:10:21,516 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 11:10:21,526 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 11:10:21,527 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 11:10:21,528 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 11:14:41,727 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 11:14:41,727 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 11:14:41,727 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 11:14:41,731 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 11:14:41,732 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 11:14:41,733 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 11:32:17,939 [13796] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 11:32:17,941 [13796] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 11:32:17,941 [13796] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 11:32:17,945 [13796] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 11:32:17,945 [13796] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 11:32:17,946 [13796] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 11:42:02,258 [13796] DEBUG    matplotlib:275: [JupyterRequire] matplotlib data path: C:\Users\mocus\anaconda3\lib\site-packages\matplotlib\mpl-data
2023-03-15 11:42:02,267 [13796] DEBUG    matplotlib:275: [JupyterRequire] CONFIGDIR=C:\Users\mocus\.matplotlib
2023-03-15 11:42:02,269 [13796] DEBUG    matplotlib:1445: [JupyterRequire] interactive is False
2023-03-15 11:42:02,270 [13796] DEBUG    matplotlib:1446: [JupyterRequire] platform is win32
2023-03-15 11:42:02,270 [13796] DEBUG    matplotlib:1447: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', '_distutils_hack', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'mpl_toolkits', 'ruamel', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'jupyter_client._version', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'copy', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'concurrent', 'traceback', '_string', 'string', 'atexit', 'logging', 'concurrent.futures._base', 'concurrent.futures', '_socket', 'math', 'select', 'selectors', 'socket', '_ssl', '_struct', 'struct', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'posixpath', 'fnmatch', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', '_queue', 'queue', 'platform', 'zmq.backend.select', '_cython_0_29_30', 'cython_runtime', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.message', '_compat_pickle', '_pickle', 'pickle', 'zmq.constants', 'zmq.backend.cython.socket', 'zmq.backend.cython._device', 'zmq.backend.cython._poll', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython._version', 'zmq.backend.cython.error', 'zmq.backend.cython.utils', 'zmq.backend.cython', 'zmq.backend', 'zmq.sugar.attrsettr', 'zmq._typing', 'zmq.utils', 'zmq.utils.jsonapi', 'zmq.sugar.poll', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'zmq._future', 'zmq.asyncio', 'jupyter_client.channelsabc', '_hashlib', '_blake2', 'hashlib', 'hmac', 'pprint', '_datetime', 'datetime', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'traitlets.log', 'tornado', 'numbers', 'logging.handlers', 'html.entities', 'html', 'urllib', 'urllib.parse', 'array', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'jupyter_client.adapter', 'dateutil._version', 'dateutil', '__future__', 'locale', 'calendar', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.session', 'jupyter_client.channels', 'getpass', 'jupyter_client.clientabc', 'glob', 'jupyter_core.version', 'jupyter_core', 'pathlib', 'jupyter_core.paths', 'jupyter_client.localinterfaces', 'jupyter_client.utils', 'jupyter_client.connect', 'jupyter_client.client', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'jupyter_client.launcher', '_uuid', 'uuid', 'jupyter_client.managerabc', 'zipfile', 'configparser', 'entrypoints', 'jupyter_client.provisioning.provisioner_base', 'jupyter_client.provisioning.factory', 'jupyter_client.provisioning.local_provisioner', 'jupyter_client.provisioning', 'jupyter_client.kernelspec', 'jupyter_client.manager', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'IPython.lib.security', 'IPython.lib', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi._compatibility', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.inference.docstring_utils', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'concurrent.futures.thread', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'ipykernel.control', 'ipykernel.heartbeat', 'ipykernel.iostream', 'IPython.utils.tokenutil', 'ipykernel.jsonutil', 'psutil._common', 'psutil._compat', 'psutil._psutil_windows', 'psutil._pswindows', 'psutil', 'tornado.locks', 'tornado.queues', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.jaraco', 'pkg_resources.extern.jaraco', 'importlib._common', 'importlib.resources', 'pkg_resources._vendor.more_itertools.recipes', 'pkg_resources._vendor.more_itertools.more', 'pkg_resources._vendor.more_itertools', 'pkg_resources.extern.more_itertools', 'pkg_resources.extern.jaraco.functools', 'pkg_resources.extern.jaraco.context', 'pkg_resources.extern.jaraco.text', 'win32api', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.version', 'pkg_resources._vendor.packaging._manylinux', 'pkg_resources._vendor.packaging._musllinux', 'pkg_resources.extern.packaging.tags', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing.util', 'pkg_resources._vendor.pyparsing.unicode', 'pkg_resources._vendor.pyparsing.exceptions', 'pkg_resources._vendor.pyparsing.actions', 'pkg_resources._vendor.pyparsing.results', 'pkg_resources._vendor.pyparsing.core', 'pkg_resources._vendor.pyparsing.helpers', 'pkg_resources._vendor.pyparsing.testing', 'pkg_resources._vendor.pyparsing.common', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging.version', 'ipykernel.eventloops', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'ntsecuritycon', 'win32security', 'faulthandler', 'IPython.core.completerlib', 'storemagic', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3._version', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.wait', 'urllib3.util.connection', '_cffi_backend', '_brotli.lib', '_brotli', 'brotli._brotli', 'brotli.brotli', 'brotli', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.retry', 'urllib3.util.url', 'urllib3.util.ssltransport', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util', 'urllib3.util.proxy', 'urllib3._collections', 'ipaddress', 'urllib3.util.ssl_match_hostname', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'chardet.enums', 'chardet.charsetprober', 'chardet.charsetgroupprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.escprober', 'chardet.latin1prober', 'chardet.mbcssm', 'chardet.utf8prober', 'chardet.mbcharsetprober', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.chardistribution', 'chardet.jpcntx', 'chardet.sjisprober', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.mbcsgroupprober', 'chardet.hebrewprober', 'chardet.sbcharsetprober', 'chardet.langbulgarianmodel', 'chardet.langgreekmodel', 'chardet.langhebrewmodel', 'chardet.langrussianmodel', 'chardet.langthaimodel', 'chardet.langturkishmodel', 'chardet.sbcsgroupprober', 'chardet.universaldetector', 'chardet.version', 'chardet', 'http.cookiejar', 'http.cookies', 'requests.compat', 'requests.exceptions', 'charset_normalizer.constant', '_multibytecodec', 'charset_normalizer.utils', 'charset_normalizer.md', 'charset_normalizer.models', 'charset_normalizer.assets', 'charset_normalizer.cd', 'charset_normalizer.api', 'charset_normalizer.legacy', 'charset_normalizer.version', 'charset_normalizer', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3._version', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssltransport', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util', 'requests.packages.urllib3.util.proxy', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.util.ssl_match_hostname', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet', 'requests.packages', 'certifi.core', 'certifi', 'requests.certs', 'requests.__version__', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'requests.utils', 'requests.auth', 'requests.hooks', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'mkl._mklinit', 'mkl._py_mkl_service', 'mkl', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'openpyxl.compat.numbers', 'openpyxl.compat.strings', 'openpyxl.compat', 'lxml', 'lxml._elementpath', 'lxml.etree', 'defusedxml.common', 'defusedxml', 'openpyxl.xml', 'openpyxl.worksheet', 'openpyxl.utils.exceptions', 'openpyxl.utils.cell', 'openpyxl.utils.formulas', 'openpyxl.utils', 'openpyxl.utils.datetime', 'openpyxl.descriptors.namespace', 'openpyxl.descriptors.base', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'defusedxml.ElementTree', 'openpyxl.xml.constants', 'openpyxl.xml.functions', 'openpyxl.utils.indexed_list', 'openpyxl.descriptors.sequence', 'openpyxl.descriptors', 'openpyxl.descriptors.serialisable', 'openpyxl.styles.alignment', 'openpyxl.styles.colors', 'openpyxl.styles.borders', 'openpyxl.styles.fills', 'openpyxl.descriptors.nested', 'openpyxl.styles.fonts', 'openpyxl.styles.numbers', 'openpyxl.styles.protection', 'openpyxl.descriptors.excel', 'openpyxl.styles.cell_style', 'openpyxl.styles.named_styles', 'openpyxl.styles', 'openpyxl.styles.proxy', 'openpyxl.styles.builtins', 'openpyxl.styles.styleable', 'openpyxl.worksheet.hyperlink', 'openpyxl.cell.cell', 'openpyxl.cell.read_only', 'openpyxl.cell', 'openpyxl.styles.differential', 'openpyxl.formatting.rule', 'openpyxl.formatting', 'openpyxl.worksheet.cell_range', 'openpyxl.formatting.formatting', 'openpyxl.packaging', 'openpyxl.packaging.relationship', 'openpyxl.utils.escape', 'openpyxl.worksheet.header_footer', 'openpyxl.workbook.child', 'openpyxl.formula.tokenizer', 'openpyxl.formula', 'openpyxl.workbook.defined_name', 'openpyxl.formula.translate', 'openpyxl.worksheet.datavalidation', 'openpyxl.worksheet.page', 'openpyxl.utils.units', 'openpyxl.utils.bound_dictionary', 'openpyxl.worksheet.dimensions', 'openpyxl.utils.protection', 'openpyxl.worksheet.protection', 'openpyxl.worksheet.filters', 'openpyxl.worksheet.views', 'openpyxl.worksheet.merge', 'openpyxl.worksheet.properties', 'openpyxl.worksheet.pagebreak', 'openpyxl.worksheet.scenario', 'openpyxl.worksheet.related', 'openpyxl.worksheet.table', 'openpyxl.worksheet.worksheet', 'openpyxl.cell.text', 'openpyxl.worksheet._reader', 'openpyxl.worksheet._read_only', 'openpyxl.comments.comments', 'openpyxl.comments', 'openpyxl.comments.author', 'openpyxl.comments.shape_writer', 'openpyxl.comments.comment_sheet', 'openpyxl.cell._writer', 'openpyxl.worksheet._writer', 'openpyxl.worksheet._write_only', 'openpyxl.worksheet.copier', 'openpyxl.writer', 'openpyxl.drawing.drawing', 'openpyxl.drawing', 'PIL._version', 'PIL', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._deprecate', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'openpyxl.drawing.image', 'openpyxl.chart.layout', 'openpyxl.chart.picture', 'openpyxl.drawing.colors', 'openpyxl.drawing.effect', 'openpyxl.drawing.fill', 'openpyxl.drawing.line', 'openpyxl.drawing.geometry', 'openpyxl.chart.shapes', 'openpyxl.drawing.text', 'openpyxl.chart.data_source', 'openpyxl.chart.text', 'openpyxl.chart.error_bar', 'openpyxl.chart.marker', 'openpyxl.chart._3d', 'openpyxl.chart.legend', 'openpyxl.chart.reference', 'openpyxl.chart.label', 'openpyxl.chart.trendline', 'openpyxl.chart.series', 'openpyxl.chart.series_factory', 'openpyxl.chart.title', 'openpyxl.chart._chart', 'openpyxl.chart.descriptors', 'openpyxl.chart.axis', 'openpyxl.chart.area_chart', 'openpyxl.chart.bar_chart', 'openpyxl.chart.bubble_chart', 'openpyxl.chart.updown_bars', 'openpyxl.chart.line_chart', 'openpyxl.chart.pie_chart', 'openpyxl.chart.radar_chart', 'openpyxl.chart.scatter_chart', 'openpyxl.chart.stock_chart', 'openpyxl.chart.surface_chart', 'openpyxl.chart', 'openpyxl.drawing.xdr', 'openpyxl.drawing.properties', 'openpyxl.drawing.connector', 'openpyxl.drawing.picture', 'openpyxl.drawing.relation', 'openpyxl.drawing.graphic', 'openpyxl.drawing.spreadsheet_drawing', 'openpyxl.packaging.manifest', 'openpyxl.packaging.extended', 'openpyxl.styles.table', 'openpyxl.styles.stylesheet', 'openpyxl.workbook.external_reference', 'openpyxl.workbook.function_group', 'openpyxl.workbook.properties', 'openpyxl.workbook.protection', 'openpyxl.workbook.smart_tags', 'openpyxl.workbook.views', 'openpyxl.workbook.web', 'openpyxl.packaging.workbook', 'openpyxl.workbook._writer', 'openpyxl.writer.theme', 'openpyxl.writer.excel', 'openpyxl.worksheet.drawing', 'openpyxl.chartsheet.relation', 'openpyxl.chartsheet.properties', 'openpyxl.chartsheet.protection', 'openpyxl.chartsheet.views', 'openpyxl.chartsheet.custom', 'openpyxl.chartsheet.publish', 'openpyxl.chartsheet.chartsheet', 'openpyxl.chartsheet', 'openpyxl.packaging.core', 'openpyxl.workbook.workbook', 'openpyxl.workbook', 'openpyxl.reader', 'openpyxl.pivot', 'openpyxl.pivot.fields', 'openpyxl.pivot.table', 'openpyxl.reader.strings', 'openpyxl.workbook.external_link.external', 'openpyxl.workbook.external_link', 'openpyxl.pivot.cache', 'openpyxl.pivot.record', 'openpyxl.reader.workbook', 'openpyxl.chart.plotarea', 'openpyxl.chart.pivot', 'openpyxl.chart.print_settings', 'openpyxl.chart.chartspace', 'openpyxl.chart.reader', 'openpyxl.reader.drawings', 'openpyxl.reader.excel', 'openpyxl._constants', 'openpyxl', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'pandas._typing', '_cython_0_29_32', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.util._exceptions', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.concat', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers.utils', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.compat._optional', 'numexpr.interpreter', 'numexpr.expressions', 'numexpr.version', 'numexpr.utils', 'numexpr.necompiler', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.arraylike', 'pandas.core.missing', 'pandas.core.array_algos.quantile', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck._pytesttester', 'bottleneck.move', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.reduce', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', '_csv', 'csv', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.array_algos.putmask', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.indexes.range', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.api', 'pandas.core.indexing', 'pandas.core.array_algos.replace', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'mmap', 'pandas.core.shared_docs', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.sample', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas._libs.window.indexers', 'pandas.core.indexers.objects', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core._numba', 'pandas.core._numba.executor', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.io.formats.info', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.indexing', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.arrow_parser_wrapper', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._version', 'pandas', 'pandas.io.formats.string', 'pandas.io.formats.html', 'logging.config', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'jupyter_require', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing.util', 'pyparsing.unicode', 'pyparsing.exceptions', 'pyparsing.actions', 'pyparsing.results', 'pyparsing.core', 'pyparsing.helpers', 'pyparsing.testing', 'pyparsing.common', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'kiwisolver._cext', 'kiwisolver']
2023-03-15 11:42:02,409 [13796] DEBUG    matplotlib:275: [JupyterRequire] CACHEDIR=C:\Users\mocus\.matplotlib
2023-03-15 11:42:02,416 [13796] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from C:\Users\mocus\.matplotlib\fontlist-v330.json
2023-03-15 12:08:43,688 [13796] DEBUG    matplotlib.pyplot:301: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-03-15 12:08:43,690 [13796] DEBUG    matplotlib.pyplot:301: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-03-15 12:08:43,715 [13796] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-03-15 12:08:43,717 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,717 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-03-15 12:08:43,717 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,717 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,717 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-03-15 12:08:43,719 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,719 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,719 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,719 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,719 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,720 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,720 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,720 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,720 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-03-15 12:08:43,721 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,721 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,721 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,721 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,721 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,721 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,722 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,722 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,722 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,722 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-03-15 12:08:43,722 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,722 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,722 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,723 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,723 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,723 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,723 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,723 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,723 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,724 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,724 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,724 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,724 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,724 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,724 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansLightNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,724 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,724 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondBoItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:43,725 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-03-15 12:08:43,725 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSans-ExtraLight.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 0.24
2023-03-15 12:08:43,725 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GenBkBasBI.ttf', name='Gentium Book Basic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,725 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,725 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,725 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,725 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,725 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,725 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansLightItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:43,726 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,726 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,726 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Carlito-BoldItalic.ttf', name='Carlito', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,726 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-ExtraBoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=800, stretch='normal', size='scalable')) = 11.43
2023-03-15 12:08:43,726 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-03-15 12:08:43,726 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,726 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,726 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-Light.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,727 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,727 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,727 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,727 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,727 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,727 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,727 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:43,727 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,727 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,728 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,728 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,728 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,728 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,728 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasR.ttf', name='Gentium Basic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,728 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,728 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,728 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-Bold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,728 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,729 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\hpsimplifiedjpan-regular.ttf', name='HP Simplified Jpan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,729 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:43,729 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansUltraBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-03-15 12:08:43,729 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,729 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond-BoldItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:43,729 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,729 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,729 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,730 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,730 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:43,730 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,730 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,730 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,730 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-03-15 12:08:43,730 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,730 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,730 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,731 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-BoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,731 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-BoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,731 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,731 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,731 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,731 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,731 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:43,732 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,732 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,732 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,732 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,732 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova-Light.ttf', name='Arial Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,732 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,732 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,733 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,733 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-Regular.ttf', name='Verdana Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,733 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,734 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GenBkBasI.ttf', name='Gentium Book Basic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,734 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:43,734 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,734 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-03-15 12:08:43,734 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NHaasGroteskTXPro-Rg.ttf', name='Neue Haas Grotesk Text Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,734 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Italic.ttf', name='Caladea', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,734 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-03-15 12:08:43,734 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:43,734 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_BdIt.ttf', name='HP Simplified', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,735 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,735 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond-LightItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:43,735 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondBoItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:43,735 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,735 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,736 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,736 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,736 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,736 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,736 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,737 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,737 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,737 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,737 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,737 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-03-15 12:08:43,738 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,738 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,738 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,738 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,738 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,738 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,739 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,739 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond-BoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:43,739 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,739 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,739 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,740 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-03-15 12:08:43,740 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,740 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,740 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-ExtraBoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=800, stretch='normal', size='scalable')) = 11.43
2023-03-15 12:08:43,740 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,740 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-Bold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,740 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,741 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,741 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondRegular.ttf', name='Georgia Pro', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,741 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,741 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondExtraNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=800, stretch='condensed', size='scalable')) = 10.629999999999999
2023-03-15 12:08:43,741 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,741 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,742 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,742 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-SemiBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:43,742 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansLightNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,742 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,742 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,742 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 1.535
2023-03-15 12:08:43,742 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,743 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,743 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-03-15 12:08:43,743 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,743 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondLightItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:43,743 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-BoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,743 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:43,744 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-03-15 12:08:43,744 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified_It.ttf', name='HP Simplified', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,744 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_Lt.ttf', name='HP Simplified', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,744 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,744 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Carlito-Regular.ttf', name='Carlito', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,744 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-03-15 12:08:43,745 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond-Italic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:43,745 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,745 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,745 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,745 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,745 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,745 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,745 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,746 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,746 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-03-15 12:08:43,746 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,746 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,746 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-03-15 12:08:43,746 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,746 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,746 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,747 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,747 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-03-15 12:08:43,747 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,747 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,748 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Caladea-Bold.ttf', name='Caladea', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,748 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,748 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,748 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_It.ttf', name='HP Simplified', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,748 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,748 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-03-15 12:08:43,749 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,749 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,749 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,749 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,749 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,749 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-LightItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:43,749 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,749 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,749 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-03-15 12:08:43,749 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,750 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,750 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\hpsimplifiedhans-regular.ttf', name='HP Simplified Hans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,750 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-Italic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,750 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 1.25
2023-03-15 12:08:43,750 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,750 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,750 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondBlack.ttf', name='Verdana Pro', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2023-03-15 12:08:43,750 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,751 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,751 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,751 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansUltraBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-03-15 12:08:43,751 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,751 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,751 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,751 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondBlackItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=900, stretch='condensed', size='scalable')) = 11.725
2023-03-15 12:08:43,751 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,752 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,752 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-SemiBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:43,752 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,752 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:43,752 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:43,752 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,752 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,752 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,753 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:43,753 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 0.25
2023-03-15 12:08:43,753 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Italic.ttf', name='Carlito', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,753 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\hpsimplifiedjpan-light.ttf', name='HP Simplified Jpan', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,753 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,753 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,753 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,753 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,753 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,753 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-03-15 12:08:43,754 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-Light.ttf', name='Verdana Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,754 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,754 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,754 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:43,754 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,754 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,755 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,755 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-03-15 12:08:43,755 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:43,755 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,755 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,755 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,755 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondSemiBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=600, stretch='condensed', size='scalable')) = 10.44
2023-03-15 12:08:43,755 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,755 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,756 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,756 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,756 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,756 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,756 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,756 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,756 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond-BoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:43,756 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,757 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,757 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,757 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,757 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,757 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,757 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,757 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,757 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-BoldItalic.ttf', name='Carlito', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,758 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-Italic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,758 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:43,758 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,758 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,758 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:43,758 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,758 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,758 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-03-15 12:08:43,759 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,759 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,759 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondLight.ttf', name='Georgia Pro', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:43,759 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond-Light.ttf', name='Arial Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:43,759 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,759 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,759 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova-BoldItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,760 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,760 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,760 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,760 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,760 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,760 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,760 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,761 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-ExtraLight.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 0.24
2023-03-15 12:08:43,761 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,761 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,761 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,761 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,761 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,761 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-03-15 12:08:43,761 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,761 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,761 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova-Italic.ttf', name='Arial Nova', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,763 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova-LightItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:43,763 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,763 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,763 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,763 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,763 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:43,763 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,763 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,763 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,763 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondLight.ttf', name='Georgia Pro', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:43,763 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,763 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Regular.ttf', name='Caladea', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,763 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova-BoldItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,763 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-Black.ttf', name='Verdana Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-03-15 12:08:43,763 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,764 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,764 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:43,764 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,764 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,764 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,764 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,764 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,764 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,764 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,765 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-Black.ttf', name='Georgia Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-03-15 12:08:43,765 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,765 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-ExtraBold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-03-15 12:08:43,765 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:43,765 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-03-15 12:08:43,765 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-LightItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:43,765 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,765 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasI.ttf', name='Gentium Book Basic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,765 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,766 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Caladea-Italic.ttf', name='Caladea', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,766 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,766 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,766 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansLightItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:43,766 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,766 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,766 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,766 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,766 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:43,767 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,767 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,767 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-SemiBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:43,767 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:43,767 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,767 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,767 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,767 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,767 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,767 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,768 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,768 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:43,768 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,768 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,768 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,768 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,768 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,768 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,768 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-03-15 12:08:43,768 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-03-15 12:08:43,769 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondLightItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:43,769 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,769 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,769 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondSemiBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=600, stretch='condensed', size='scalable')) = 11.44
2023-03-15 12:08:43,769 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,769 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,769 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NHaasGroteskTXPro-It.ttf', name='Neue Haas Grotesk Text Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,769 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,769 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondSemiBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=600, stretch='condensed', size='scalable')) = 11.44
2023-03-15 12:08:43,769 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=500, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:43,769 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-SemiBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:43,770 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,770 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,770 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,770 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:43,770 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-03-15 12:08:43,770 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,770 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,770 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova-Italic.ttf', name='Arial Nova', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,770 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-BoldItalic.ttf', name='Caladea', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,770 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSerifCondensed.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,771 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,771 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,771 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-Regular.ttf', name='Georgia Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,771 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-03-15 12:08:43,771 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond-LightItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:43,771 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,771 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,771 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,771 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,771 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:43,772 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,772 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova-LightItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:43,772 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:43,772 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GenBkBasR.ttf', name='Gentium Book Basic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,772 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,772 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondBlackItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=900, stretch='condensed', size='scalable')) = 11.725
2023-03-15 12:08:43,772 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-03-15 12:08:43,772 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,772 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,773 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,773 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,773 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-Light.ttf', name='Georgia Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,773 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:43,773 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,773 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NHaasGroteskTXPro-It.ttf', name='Neue Haas Grotesk Text Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,773 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-Bold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,773 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,773 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,773 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,774 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,774 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Caladea-Regular.ttf', name='Caladea', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,774 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,774 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondSemiBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=600, stretch='condensed', size='scalable')) = 10.44
2023-03-15 12:08:43,774 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,774 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,774 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-SemiBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:43,774 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondSemiBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=600, stretch='condensed', size='scalable')) = 10.44
2023-03-15 12:08:43,774 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,774 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,775 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,775 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,775 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,775 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,775 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-Light.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,775 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,775 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,775 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-03-15 12:08:43,775 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,775 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:43,776 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:43,776 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondRegular.ttf', name='Georgia Pro', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,776 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-03-15 12:08:43,776 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GenBasI.ttf', name='Gentium Basic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,776 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,776 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,776 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondLightItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:43,776 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,776 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,776 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,777 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,777 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,777 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-03-15 12:08:43,777 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,777 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,778 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,778 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,778 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,778 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-03-15 12:08:43,778 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,778 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,778 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-BlackItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-03-15 12:08:43,779 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:43,779 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,779 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Carlito-Bold.ttf', name='Carlito', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,779 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,779 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,779 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,780 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,780 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,780 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-ExtraBold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-03-15 12:08:43,780 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,780 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,780 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=500, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:43,780 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,780 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-Light.ttf', name='Verdana Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,780 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,780 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,780 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-03-15 12:08:43,781 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,781 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondRegular.ttf', name='Verdana Pro', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,781 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-03-15 12:08:43,781 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-03-15 12:08:43,781 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,781 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,781 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,781 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,781 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond-Light.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:43,781 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-Italic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,782 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-03-15 12:08:43,782 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,782 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,782 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond-Bold.ttf', name='Arial Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:43,782 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,782 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-03-15 12:08:43,782 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,782 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,782 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,783 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,783 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,783 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,783 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,783 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-SemiBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:43,783 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,783 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,783 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,783 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,783 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondLightItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:43,784 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,784 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,784 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,784 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,784 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,784 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,784 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,784 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondRegular.ttf', name='Verdana Pro', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,784 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,784 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,784 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,785 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-03-15 12:08:43,785 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,785 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,785 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,785 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-03-15 12:08:43,785 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,785 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-03-15 12:08:43,785 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,785 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,785 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondLightNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:43,786 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,786 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,786 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,786 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,786 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,786 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,786 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,786 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,786 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,787 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified_Lt.ttf', name='HP Simplified', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,787 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 0.5349999999999999
2023-03-15 12:08:43,787 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,787 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:43,787 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,787 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:43,787 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,787 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,787 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-03-15 12:08:43,787 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,788 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:43,788 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:43,788 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-03-15 12:08:43,788 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,788 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GenBasB.ttf', name='Gentium Basic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,788 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,788 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,788 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified_BdIt.ttf', name='HP Simplified', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,788 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,788 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,789 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,789 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Bold.ttf', name='Carlito', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,789 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,789 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,789 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\hpsimplifiedjpan-regular.ttf', name='HP Simplified Jpan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,789 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,789 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,789 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond-Bold.ttf', name='Arial Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:43,789 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,789 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondBlack.ttf', name='Georgia Pro', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2023-03-15 12:08:43,790 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,790 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,790 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-03-15 12:08:43,790 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSerifCondensed-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:43,790 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,790 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond-LightItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:43,790 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,790 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-Black.ttf', name='Verdana Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-03-15 12:08:43,790 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,790 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,791 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,791 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,791 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-03-15 12:08:43,791 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-03-15 12:08:43,791 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,791 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,791 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,791 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,791 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:43,791 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:43,792 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,792 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,792 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansBoItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,792 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova.ttf', name='Arial Nova', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,792 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,792 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,792 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:43,792 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,792 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,792 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,793 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,793 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,793 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,793 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,793 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova-Bold.ttf', name='Arial Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,794 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,794 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,794 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-03-15 12:08:43,794 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-Bold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,794 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,794 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,794 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,794 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,794 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansBoItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,794 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,795 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,795 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:43,795 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,795 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,795 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,795 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasBI.ttf', name='Gentium Book Basic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,795 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\hpsimplifiedhans-light.ttf', name='HP Simplified Hans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,795 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasR.ttf', name='Gentium Book Basic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,795 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondSemiBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=600, stretch='condensed', size='scalable')) = 11.44
2023-03-15 12:08:43,795 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:43,796 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,796 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-Regular.ttf', name='Verdana Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,796 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,796 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:43,796 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\hpsimplifiedjpan-light.ttf', name='HP Simplified Jpan', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,796 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,796 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-Italic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,796 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,796 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified.ttf', name='HP Simplified', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,796 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSansCondensed-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 1.535
2023-03-15 12:08:43,796 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,796 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova.ttf', name='Arial Nova', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,796 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,796 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,796 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-03-15 12:08:43,796 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,797 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,797 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,797 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,797 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:43,797 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-BlackItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-03-15 12:08:43,797 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondSemiBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=600, stretch='condensed', size='scalable')) = 11.44
2023-03-15 12:08:43,797 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondLight.ttf', name='Verdana Pro', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:43,797 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-SemiBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:43,797 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasB.ttf', name='Gentium Book Basic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,797 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,798 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Bold.ttf', name='Caladea', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,798 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond.ttf', name='Arial Nova', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,798 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,798 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,798 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasI.ttf', name='Gentium Basic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,798 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,798 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,798 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,798 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,799 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Carlito-Italic.ttf', name='Carlito', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,799 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,799 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:43,799 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,799 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:43,799 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:43,799 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,799 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:43,799 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_LtIt.ttf', name='HP Simplified', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:43,799 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondBlackItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=900, stretch='condensed', size='scalable')) = 11.725
2023-03-15 12:08:43,800 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,800 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:43,800 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,800 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,800 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,800 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,800 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,800 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-LightItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:43,800 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,800 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond-Italic.ttf', name='Arial Nova', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:43,801 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,801 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSansCondensed-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 1.25
2023-03-15 12:08:43,801 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-03-15 12:08:43,801 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondExtraItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=800, stretch='condensed', size='scalable')) = 11.629999999999999
2023-03-15 12:08:43,801 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-BoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,801 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasB.ttf', name='Gentium Basic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,801 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,801 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,801 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,802 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-Bold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,802 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,802 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,802 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,802 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,802 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,802 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified.ttf', name='HP Simplified', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,802 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,802 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,802 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,803 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,803 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:43,803 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond-Bold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:43,803 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,803 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,803 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_Rg.ttf', name='HP Simplified', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,803 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,803 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,803 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-03-15 12:08:43,803 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-BoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,804 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,804 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,804 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,804 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-03-15 12:08:43,804 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,804 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,804 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,804 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-Black.ttf', name='Georgia Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-03-15 12:08:43,804 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,804 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-03-15 12:08:43,805 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,805 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-03-15 12:08:43,805 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,805 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,805 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-03-15 12:08:43,805 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,805 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,805 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,805 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondUltraBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2023-03-15 12:08:43,805 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondLightItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:43,806 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:43,806 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,806 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,806 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,806 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:43,806 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond-Light.ttf', name='Arial Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:43,806 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,806 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,806 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,806 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,807 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,807 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:43,807 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,807 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSerifCondensed-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:43,807 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,807 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,807 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,807 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,808 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,808 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\hpsimplifiedhans-light.ttf', name='HP Simplified Hans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,808 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:43,808 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,808 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:43,808 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,808 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:43,808 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,808 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,808 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,809 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,809 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,809 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,809 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,809 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=500, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:43,809 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GenBasBI.ttf', name='Gentium Basic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,809 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,809 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,809 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,810 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,810 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,810 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondSemiBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=600, stretch='condensed', size='scalable')) = 10.44
2023-03-15 12:08:43,810 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,810 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond-Bold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:43,810 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:43,810 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,810 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-LightItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:43,810 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,810 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,811 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,811 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,811 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-BlackItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-03-15 12:08:43,811 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,811 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,811 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond.ttf', name='Arial Nova', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,811 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondLightItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:43,811 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova-Light.ttf', name='Arial Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,811 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,811 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,812 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,812 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,812 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondBlack.ttf', name='Verdana Pro', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2023-03-15 12:08:43,812 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,812 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-03-15 12:08:43,812 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified_LtIt.ttf', name='HP Simplified', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:43,812 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,812 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:43,812 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,812 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,813 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,813 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,813 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,813 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,813 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,813 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,813 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,813 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,813 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-Regular.ttf', name='Georgia Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,813 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,814 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:43,814 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,814 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,814 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,814 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,814 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,814 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-Bold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,814 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond-LightItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:43,814 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,814 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,815 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-03-15 12:08:43,815 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,815 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,815 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,815 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-LightItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:43,815 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,815 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,815 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,815 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-Italic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,816 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-BlackItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-03-15 12:08:43,816 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond-Italic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:43,816 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,816 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,816 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,816 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-LightItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:43,816 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,816 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova-Bold.ttf', name='Arial Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,816 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,816 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond-Light.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:43,817 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:43,817 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,817 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond-BoldItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:43,817 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasBI.ttf', name='Gentium Basic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,817 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,817 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-BoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,817 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,817 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,817 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-Italic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,818 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,818 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,818 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,818 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondLightNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:43,818 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,818 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,818 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondLight.ttf', name='Verdana Pro', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:43,818 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,818 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,819 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:43,819 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,819 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,819 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondExtraNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=800, stretch='condensed', size='scalable')) = 10.629999999999999
2023-03-15 12:08:43,819 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,819 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-03-15 12:08:43,819 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,819 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,819 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,819 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,820 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,820 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond-Italic.ttf', name='Arial Nova', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:43,820 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,820 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,820 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,820 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NHaasGroteskTXPro-Rg.ttf', name='Neue Haas Grotesk Text Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,820 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,820 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSansCondensed-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 0.5349999999999999
2023-03-15 12:08:43,820 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,820 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-03-15 12:08:43,821 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:43,821 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,821 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,821 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,821 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-Light.ttf', name='Georgia Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,821 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,821 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GenBasR.ttf', name='Gentium Basic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,821 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,821 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,821 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,822 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,822 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,822 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,822 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,822 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,822 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-03-15 12:08:43,822 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,822 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,822 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-03-15 12:08:43,822 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,823 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-03-15 12:08:43,823 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified_Rg.ttf', name='HP Simplified', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,823 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,824 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,824 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,824 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,824 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,824 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,824 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,824 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,824 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,824 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,824 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,824 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,824 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GenBkBasB.ttf', name='Gentium Book Basic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,826 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,826 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSansCondensed.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 0.25
2023-03-15 12:08:43,826 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,826 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondExtraItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=800, stretch='condensed', size='scalable')) = 11.629999999999999
2023-03-15 12:08:43,826 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,826 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:43,826 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,826 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,826 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,826 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,826 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,826 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,826 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,826 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondUltraBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2023-03-15 12:08:43,826 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,826 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,827 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-03-15 12:08:43,827 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:43,827 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,827 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,827 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,827 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-SemiBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:43,827 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,827 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,827 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,827 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,828 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,828 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:43,828 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:43,828 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,828 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,828 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,828 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondBlackItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=900, stretch='condensed', size='scalable')) = 11.725
2023-03-15 12:08:43,828 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,828 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,828 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,829 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,829 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:43,829 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,829 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSerifCondensed-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:43,829 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,829 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,829 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\hpsimplifiedhans-regular.ttf', name='HP Simplified Hans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,829 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-03-15 12:08:43,829 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:43,829 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Regular.ttf', name='Carlito', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,830 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,830 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,830 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=500, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:43,830 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,830 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,830 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,830 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,830 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-03-15 12:08:43,830 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,830 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,831 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,831 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,831 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:43,831 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,831 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,831 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,831 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,831 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Caladea-BoldItalic.ttf', name='Caladea', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,831 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:43,831 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:43,832 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,832 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:43,832 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,832 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondBlack.ttf', name='Georgia Pro', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2023-03-15 12:08:43,832 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:43,832 [13796] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-03-15 12:08:44,229 [13796] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-03-15 12:08:44,229 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,230 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-03-15 12:08:44,230 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,230 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,230 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-03-15 12:08:44,230 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,231 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,231 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,231 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,231 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,231 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,232 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,232 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,232 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-03-15 12:08:44,232 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,233 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,233 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,233 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,233 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,233 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,234 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,234 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,234 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,234 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-03-15 12:08:44,234 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,234 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,234 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,234 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,235 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,235 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,235 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,235 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,235 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,235 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,235 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,235 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,235 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,235 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,235 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansLightNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,235 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,235 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondBoItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:44,236 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-03-15 12:08:44,236 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSans-ExtraLight.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 0.24
2023-03-15 12:08:44,236 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GenBkBasBI.ttf', name='Gentium Book Basic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,236 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,236 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,236 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,236 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,236 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,237 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansLightItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:44,237 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,237 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,237 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Carlito-BoldItalic.ttf', name='Carlito', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,237 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-ExtraBoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=800, stretch='normal', size='scalable')) = 11.43
2023-03-15 12:08:44,237 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-03-15 12:08:44,237 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,238 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,238 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-Light.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,238 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,238 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,238 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,238 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,238 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,239 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,239 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:44,239 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,239 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,239 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,241 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,241 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,241 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,241 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasR.ttf', name='Gentium Basic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,241 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,241 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,241 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-Bold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,241 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,241 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\hpsimplifiedjpan-regular.ttf', name='HP Simplified Jpan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,241 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:44,241 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansUltraBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-03-15 12:08:44,241 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,241 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond-BoldItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:44,243 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,243 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,243 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,243 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,243 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:44,243 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,243 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,243 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,243 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-03-15 12:08:44,243 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,243 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,243 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,243 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-BoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,243 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-BoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,244 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,244 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,244 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,244 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,244 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:44,244 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,244 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,244 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,245 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,245 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova-Light.ttf', name='Arial Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,245 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,245 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,245 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,245 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-Regular.ttf', name='Verdana Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,245 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,246 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GenBkBasI.ttf', name='Gentium Book Basic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,246 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:44,246 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,246 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-03-15 12:08:44,246 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NHaasGroteskTXPro-Rg.ttf', name='Neue Haas Grotesk Text Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,246 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Italic.ttf', name='Caladea', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,246 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-03-15 12:08:44,246 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:44,246 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_BdIt.ttf', name='HP Simplified', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,247 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,247 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond-LightItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:44,247 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondBoItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:44,247 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,247 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,247 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,247 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,247 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,247 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,247 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,248 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,248 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,248 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,248 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,248 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-03-15 12:08:44,248 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,249 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,249 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,249 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,249 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,249 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,249 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,249 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond-BoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:44,249 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,249 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,250 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,250 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-03-15 12:08:44,250 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,250 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,250 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-ExtraBoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=800, stretch='normal', size='scalable')) = 11.43
2023-03-15 12:08:44,250 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,250 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-Bold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,250 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,250 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,251 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondRegular.ttf', name='Georgia Pro', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,251 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,251 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondExtraNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=800, stretch='condensed', size='scalable')) = 10.629999999999999
2023-03-15 12:08:44,251 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,251 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,251 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,251 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-SemiBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:44,251 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansLightNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,251 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,252 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,252 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 1.535
2023-03-15 12:08:44,252 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,252 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,252 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-03-15 12:08:44,252 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,252 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondLightItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:44,252 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-BoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,252 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:44,252 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-03-15 12:08:44,253 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified_It.ttf', name='HP Simplified', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,253 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_Lt.ttf', name='HP Simplified', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,253 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,253 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Carlito-Regular.ttf', name='Carlito', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,253 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-03-15 12:08:44,253 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond-Italic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:44,253 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,254 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,254 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,254 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,254 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,254 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,254 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,254 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,254 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-03-15 12:08:44,254 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,255 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,255 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-03-15 12:08:44,255 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,255 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,256 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,256 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,256 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-03-15 12:08:44,256 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,256 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,256 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Caladea-Bold.ttf', name='Caladea', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,256 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,257 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,257 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_It.ttf', name='HP Simplified', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,257 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,257 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-03-15 12:08:44,257 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,257 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,257 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,258 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,258 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,258 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-LightItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:44,258 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,258 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,258 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-03-15 12:08:44,258 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,259 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,259 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\hpsimplifiedhans-regular.ttf', name='HP Simplified Hans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,259 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-Italic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,259 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 1.25
2023-03-15 12:08:44,259 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,259 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,260 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondBlack.ttf', name='Verdana Pro', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2023-03-15 12:08:44,260 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,260 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,260 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,260 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansUltraBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-03-15 12:08:44,260 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,261 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,261 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,261 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondBlackItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=900, stretch='condensed', size='scalable')) = 11.725
2023-03-15 12:08:44,261 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,261 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,261 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-SemiBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:44,262 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,262 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:44,262 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:44,262 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,262 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,262 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,263 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:44,263 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 0.25
2023-03-15 12:08:44,263 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Italic.ttf', name='Carlito', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,263 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\hpsimplifiedjpan-light.ttf', name='HP Simplified Jpan', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,263 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,263 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,263 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,264 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,264 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,264 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-03-15 12:08:44,264 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-Light.ttf', name='Verdana Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,264 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,264 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,264 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:44,264 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,264 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,265 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,265 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-03-15 12:08:44,265 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:44,265 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,265 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,265 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,265 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondSemiBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=600, stretch='condensed', size='scalable')) = 10.44
2023-03-15 12:08:44,265 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,266 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,266 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,266 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,266 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,267 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,267 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,267 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,267 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond-BoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:44,267 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,267 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,267 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,267 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,267 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,267 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,267 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,268 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,268 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-BoldItalic.ttf', name='Carlito', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,268 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-Italic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,268 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:44,268 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,268 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,268 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:44,268 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,268 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,269 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-03-15 12:08:44,269 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,269 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,269 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondLight.ttf', name='Georgia Pro', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:44,269 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond-Light.ttf', name='Arial Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:44,269 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,269 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,269 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova-BoldItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,269 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,269 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,270 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,270 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,270 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,270 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,270 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,270 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-ExtraLight.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 0.24
2023-03-15 12:08:44,270 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,270 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,270 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,271 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,271 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,271 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-03-15 12:08:44,272 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,272 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,272 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova-Italic.ttf', name='Arial Nova', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,272 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova-LightItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:44,272 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,272 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,272 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,273 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,273 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:44,273 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,273 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,273 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,273 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondLight.ttf', name='Georgia Pro', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:44,273 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,274 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Regular.ttf', name='Caladea', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,274 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova-BoldItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,274 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-Black.ttf', name='Verdana Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-03-15 12:08:44,274 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,274 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,274 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:44,274 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,275 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,275 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,275 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,275 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,275 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,275 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,275 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-Black.ttf', name='Georgia Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-03-15 12:08:44,276 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,276 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-ExtraBold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-03-15 12:08:44,276 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:44,276 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-03-15 12:08:44,276 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-LightItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:44,276 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,276 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasI.ttf', name='Gentium Book Basic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,276 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,276 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Caladea-Italic.ttf', name='Caladea', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,277 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,277 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,277 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansLightItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:44,277 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,277 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,277 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,277 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,277 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:44,277 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,278 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,278 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-SemiBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:44,278 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:44,278 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,278 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,278 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,278 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,278 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,279 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,279 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,279 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:44,279 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,279 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,279 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,279 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,279 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,279 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,280 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-03-15 12:08:44,280 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-03-15 12:08:44,280 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondLightItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:44,280 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,280 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,280 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondSemiBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=600, stretch='condensed', size='scalable')) = 11.44
2023-03-15 12:08:44,280 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,280 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,280 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NHaasGroteskTXPro-It.ttf', name='Neue Haas Grotesk Text Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,281 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,281 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondSemiBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=600, stretch='condensed', size='scalable')) = 11.44
2023-03-15 12:08:44,281 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=500, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:44,281 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-SemiBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:44,281 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,281 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,281 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,281 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:44,281 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-03-15 12:08:44,282 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,282 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,282 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova-Italic.ttf', name='Arial Nova', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,282 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-BoldItalic.ttf', name='Caladea', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,282 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSerifCondensed.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,282 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,282 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,282 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-Regular.ttf', name='Georgia Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,282 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-03-15 12:08:44,283 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond-LightItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:44,283 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,283 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,283 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,283 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,283 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:44,283 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,283 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova-LightItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:44,283 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:44,283 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GenBkBasR.ttf', name='Gentium Book Basic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,284 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,284 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondBlackItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=900, stretch='condensed', size='scalable')) = 11.725
2023-03-15 12:08:44,284 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-03-15 12:08:44,284 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,284 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,284 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,284 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,284 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-Light.ttf', name='Georgia Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,284 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:44,284 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,285 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NHaasGroteskTXPro-It.ttf', name='Neue Haas Grotesk Text Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,285 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-Bold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,285 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,285 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,285 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,285 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,285 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Caladea-Regular.ttf', name='Caladea', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,285 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,285 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondSemiBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=600, stretch='condensed', size='scalable')) = 10.44
2023-03-15 12:08:44,285 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,286 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,286 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-SemiBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:44,286 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondSemiBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=600, stretch='condensed', size='scalable')) = 10.44
2023-03-15 12:08:44,286 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,286 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,286 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,286 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,286 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,286 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,286 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-Light.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,287 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,287 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,287 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-03-15 12:08:44,287 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,287 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:44,287 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:44,287 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondRegular.ttf', name='Georgia Pro', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,288 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-03-15 12:08:44,288 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GenBasI.ttf', name='Gentium Basic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,288 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,288 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,289 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondLightItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:44,289 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,289 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,289 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,289 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,289 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,289 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-03-15 12:08:44,289 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,289 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,289 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,289 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,289 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,289 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-03-15 12:08:44,289 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,290 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,290 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-BlackItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-03-15 12:08:44,290 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:44,290 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,290 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Carlito-Bold.ttf', name='Carlito', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,290 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,290 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,290 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,290 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,290 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,291 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-ExtraBold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-03-15 12:08:44,291 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,291 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,291 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=500, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:44,291 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,291 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-Light.ttf', name='Verdana Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,291 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,291 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,291 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-03-15 12:08:44,291 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,291 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondRegular.ttf', name='Verdana Pro', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,292 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-03-15 12:08:44,292 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-03-15 12:08:44,292 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,292 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,292 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,292 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,292 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond-Light.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:44,292 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-Italic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,292 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2023-03-15 12:08:44,292 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,293 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,293 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond-Bold.ttf', name='Arial Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:44,293 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,293 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-03-15 12:08:44,293 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,293 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,293 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,293 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,293 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,293 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,294 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,294 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-SemiBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:44,294 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,294 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,294 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,294 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,294 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondLightItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:44,294 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,294 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,294 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,294 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,294 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,294 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,294 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,294 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondRegular.ttf', name='Verdana Pro', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,296 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,296 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,296 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,296 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-03-15 12:08:44,296 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,296 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,296 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,296 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2023-03-15 12:08:44,296 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,296 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-03-15 12:08:44,297 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,297 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,297 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondLightNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:44,297 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,297 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,297 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,297 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,297 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,297 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,297 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,298 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,298 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,298 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified_Lt.ttf', name='HP Simplified', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,298 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 0.5349999999999999
2023-03-15 12:08:44,298 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,298 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:44,298 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,298 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:44,298 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,298 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,299 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-03-15 12:08:44,299 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,299 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:44,299 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:44,299 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-03-15 12:08:44,299 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,299 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GenBasB.ttf', name='Gentium Basic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,299 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,299 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,299 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified_BdIt.ttf', name='HP Simplified', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,300 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,300 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,300 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,300 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Bold.ttf', name='Carlito', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,300 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,300 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,300 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\hpsimplifiedjpan-regular.ttf', name='HP Simplified Jpan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,300 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,300 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,300 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond-Bold.ttf', name='Arial Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:44,301 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,301 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondBlack.ttf', name='Georgia Pro', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2023-03-15 12:08:44,301 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,301 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,301 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-03-15 12:08:44,301 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSerifCondensed-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:44,301 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,301 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond-LightItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:44,301 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,301 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-Black.ttf', name='Verdana Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-03-15 12:08:44,302 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,302 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,302 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,302 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,302 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-03-15 12:08:44,302 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-03-15 12:08:44,302 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,302 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,302 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,302 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,303 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:44,303 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:44,303 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,303 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,303 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansBoItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,303 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova.ttf', name='Arial Nova', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,303 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,303 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,304 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:44,304 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,304 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,304 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,304 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,304 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,304 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,304 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,304 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova-Bold.ttf', name='Arial Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,304 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,305 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,305 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-03-15 12:08:44,305 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-Bold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,305 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,305 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,305 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,305 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,305 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansBoItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,305 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,305 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,306 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:44,306 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,306 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,306 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,306 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasBI.ttf', name='Gentium Book Basic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,306 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\hpsimplifiedhans-light.ttf', name='HP Simplified Hans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,306 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasR.ttf', name='Gentium Book Basic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,306 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondSemiBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=600, stretch='condensed', size='scalable')) = 11.44
2023-03-15 12:08:44,306 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:44,306 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,307 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-Regular.ttf', name='Verdana Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,307 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,307 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:44,307 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\hpsimplifiedjpan-light.ttf', name='HP Simplified Jpan', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,307 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,307 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-Italic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,307 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,307 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified.ttf', name='HP Simplified', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,307 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSansCondensed-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 1.535
2023-03-15 12:08:44,307 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,308 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova.ttf', name='Arial Nova', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,308 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,308 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,308 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-03-15 12:08:44,308 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,308 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,308 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,308 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,308 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:44,308 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-BlackItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-03-15 12:08:44,309 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondSemiBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=600, stretch='condensed', size='scalable')) = 11.44
2023-03-15 12:08:44,309 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondLight.ttf', name='Verdana Pro', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:44,309 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-SemiBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:44,309 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasB.ttf', name='Gentium Book Basic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,309 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,309 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Bold.ttf', name='Caladea', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,309 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond.ttf', name='Arial Nova', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,309 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,309 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,309 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasI.ttf', name='Gentium Basic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,310 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,310 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,310 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,310 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,310 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Carlito-Italic.ttf', name='Carlito', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,310 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,310 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:44,310 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,310 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:44,310 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:44,311 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,311 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:44,311 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_LtIt.ttf', name='HP Simplified', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:44,311 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondBlackItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=900, stretch='condensed', size='scalable')) = 11.725
2023-03-15 12:08:44,311 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,311 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:44,311 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,311 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,311 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,312 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,312 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,312 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-LightItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:44,312 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,312 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNovaCond-Italic.ttf', name='Arial Nova', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:44,312 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,312 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSansCondensed-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 1.25
2023-03-15 12:08:44,312 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-03-15 12:08:44,312 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondExtraItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=800, stretch='condensed', size='scalable')) = 11.629999999999999
2023-03-15 12:08:44,312 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-BoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,312 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasB.ttf', name='Gentium Basic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,313 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,313 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,313 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,313 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-Bold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,313 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,313 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,313 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,313 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,313 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,313 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified.ttf', name='HP Simplified', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,314 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,314 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,314 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,314 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,314 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:44,314 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond-Bold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:44,314 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,314 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,314 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HPSimplified_Rg.ttf', name='HP Simplified', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,314 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,314 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,315 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2023-03-15 12:08:44,315 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova-BoldItalic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,315 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,315 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,315 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,315 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-03-15 12:08:44,315 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,315 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,315 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,316 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-Black.ttf', name='Georgia Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-03-15 12:08:44,316 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,316 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2023-03-15 12:08:44,316 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,316 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-03-15 12:08:44,316 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,316 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,316 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-03-15 12:08:44,316 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,316 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,317 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,317 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondUltraBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2023-03-15 12:08:44,317 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondLightItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:44,317 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:44,317 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,317 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,317 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,317 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:44,317 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond-Light.ttf', name='Arial Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:44,317 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,317 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,318 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,318 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,318 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,318 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:44,318 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,318 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSerifCondensed-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:44,318 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,318 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,318 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,318 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,319 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,319 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\hpsimplifiedhans-light.ttf', name='HP Simplified Hans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,319 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:44,319 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,319 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:44,319 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,319 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:44,319 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,319 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,319 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,320 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,320 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,320 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,320 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,320 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=500, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:44,320 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GenBasBI.ttf', name='Gentium Basic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,320 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,320 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,320 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,320 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,320 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,320 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondSemiBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=600, stretch='condensed', size='scalable')) = 10.44
2023-03-15 12:08:44,320 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,320 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNovaCond-Bold.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:44,320 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondBold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:44,321 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,321 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-LightItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:44,321 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,321 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,321 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,321 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,321 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-BlackItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-03-15 12:08:44,321 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,321 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,321 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond.ttf', name='Arial Nova', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,321 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondLightItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:44,322 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ArialNova-Light.ttf', name='Arial Nova', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,322 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,322 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,322 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,322 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,322 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondBlack.ttf', name='Verdana Pro', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2023-03-15 12:08:44,322 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,322 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-03-15 12:08:44,322 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified_LtIt.ttf', name='HP Simplified', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:44,322 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,323 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:44,323 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,323 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,323 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,323 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,323 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,323 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,323 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,323 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,323 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,324 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,324 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-Regular.ttf', name='Georgia Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,324 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,324 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:44,324 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,324 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,324 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,324 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,324 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,324 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-Bold.ttf', name='Verdana Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,325 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond-LightItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=300, stretch='condensed', size='scalable')) = 11.344999999999999
2023-03-15 12:08:44,325 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,325 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,325 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-03-15 12:08:44,325 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,325 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,325 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,325 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-LightItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:44,325 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,325 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,325 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,326 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNova-Italic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,326 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-BlackItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-03-15 12:08:44,326 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond-Italic.ttf', name='Rockwell Nova', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:44,326 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,326 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,326 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,326 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-LightItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:44,326 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,326 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNova-Bold.ttf', name='Arial Nova', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,326 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,327 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\RockwellNovaCond-Light.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:44,327 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:44,327 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,327 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond-BoldItalic.ttf', name='Arial Nova', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:44,327 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasBI.ttf', name='Gentium Basic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,327 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,327 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-BoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,327 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,327 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,327 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-Italic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,328 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,328 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,328 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,328 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GillSansCondLightNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:44,328 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,328 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RockwellNova.ttf', name='Rockwell Nova', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,328 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VerdanaPro-CondLight.ttf', name='Verdana Pro', style='normal', variant='normal', weight=300, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:44,328 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,328 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,328 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:44,329 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,329 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,329 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondExtraNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=800, stretch='condensed', size='scalable')) = 10.629999999999999
2023-03-15 12:08:44,329 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,329 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-03-15 12:08:44,329 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,329 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,329 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,329 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,329 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,330 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ArialNovaCond-Italic.ttf', name='Arial Nova', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-03-15 12:08:44,330 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,330 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,330 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,330 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\NHaasGroteskTXPro-Rg.ttf', name='Neue Haas Grotesk Text Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,330 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,330 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSansCondensed-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 0.5349999999999999
2023-03-15 12:08:44,330 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,330 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-03-15 12:08:44,330 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondBold.ttf', name='Georgia Pro', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:44,331 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,331 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,331 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,331 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-Light.ttf', name='Georgia Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,331 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,331 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GenBasR.ttf', name='Gentium Basic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,331 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,331 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,332 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,332 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,332 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,332 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,332 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,332 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,332 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-03-15 12:08:44,332 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,332 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,332 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2023-03-15 12:08:44,333 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,333 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2023-03-15 12:08:44,333 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HPSimplified_Rg.ttf', name='HP Simplified', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,333 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,333 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,333 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,333 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,333 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,333 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,333 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,334 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,334 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,334 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,334 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,334 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,334 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GenBkBasB.ttf', name='Gentium Book Basic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,334 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,336 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSansCondensed.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 0.25
2023-03-15 12:08:44,336 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,336 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondExtraItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=800, stretch='condensed', size='scalable')) = 11.629999999999999
2023-03-15 12:08:44,336 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,336 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-03-15 12:08:44,336 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,336 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,336 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,336 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,336 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,336 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,337 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,337 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondUltraBoNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2023-03-15 12:08:44,337 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,337 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,337 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-03-15 12:08:44,337 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-03-15 12:08:44,337 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,337 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,337 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,337 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-SemiBoldItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:44,337 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,337 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,337 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,337 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,337 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,338 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\VerdanaPro-CondBoldItalic.ttf', name='Verdana Pro', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-03-15 12:08:44,338 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:44,338 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,338 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,338 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,338 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GeorgiaPro-CondBlackItalic.ttf', name='Georgia Pro', style='italic', variant='normal', weight=900, stretch='condensed', size='scalable')) = 11.725
2023-03-15 12:08:44,338 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,338 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,338 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,338 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,339 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-03-15 12:08:44,339 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,339 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\DejaVuSerifCondensed-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-03-15 12:08:44,339 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,339 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,339 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\hpsimplifiedhans-regular.ttf', name='HP Simplified Hans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,339 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2023-03-15 12:08:44,339 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-03-15 12:08:44,339 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Regular.ttf', name='Carlito', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,339 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,339 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,340 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansCondNova.ttf', name='Gill Sans Nova', style='normal', variant='normal', weight=500, stretch='condensed', size='scalable')) = 10.344999999999999
2023-03-15 12:08:44,340 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,340 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,340 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,340 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,340 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-03-15 12:08:44,340 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,340 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,340 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,340 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,341 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GillSansItNova.ttf', name='Gill Sans Nova', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-03-15 12:08:44,341 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,341 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,341 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,341 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,341 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\Caladea-BoldItalic.ttf', name='Caladea', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,341 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-03-15 12:08:44,341 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-03-15 12:08:44,341 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,341 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-03-15 12:08:44,342 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,342 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\WINDOWS\\Fonts\\GeorgiaPro-CondBlack.ttf', name='Georgia Pro', style='normal', variant='normal', weight=900, stretch='condensed', size='scalable')) = 10.725
2023-03-15 12:08:44,342 [13796] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-03-15 12:08:44,342 [13796] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\mocus\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2023-03-15 12:42:23,421 [25504] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 12:42:23,422 [25504] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 12:42:23,422 [25504] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 12:42:23,424 [25504] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 12:42:23,424 [25504] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 12:42:23,425 [25504] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 12:45:09,008 [13992] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 12:45:09,009 [13992] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 12:45:09,009 [13992] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 12:45:09,010 [13992] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 12:45:09,012 [13992] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 12:45:09,012 [13992] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 12:53:37,720 [13992] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 12:53:37,720 [13992] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 12:53:37,720 [13992] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 12:53:37,723 [13992] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 12:53:37,725 [13992] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 12:53:37,726 [13992] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 13:33:44,766 [15064] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 13:33:44,767 [15064] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 13:33:44,767 [15064] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 13:33:44,771 [15064] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 13:33:44,772 [15064] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 13:33:44,772 [15064] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 13:54:29,776 [33516] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 13:54:29,776 [33516] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 13:54:29,777 [33516] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 13:54:29,778 [33516] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 13:54:29,779 [33516] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 13:54:29,779 [33516] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 14:16:13,157 [25012] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 14:16:13,157 [25012] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 14:16:13,157 [25012] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 14:16:13,159 [25012] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 14:16:13,159 [25012] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 14:16:13,160 [25012] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 14:24:39,503 [13880] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 14:24:39,503 [13880] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 14:24:39,503 [13880] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 14:24:39,504 [13880] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 14:24:39,505 [13880] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 14:24:39,505 [13880] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 15:00:17,723 [13880] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 15:00:17,724 [13880] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 15:00:17,724 [13880] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 15:00:17,725 [13880] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 15:00:17,726 [13880] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 15:00:17,726 [13880] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 15:03:17,029 [27044] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 15:03:17,029 [27044] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 15:03:17,029 [27044] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 15:03:17,030 [27044] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 15:03:17,031 [27044] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 15:03:17,031 [27044] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 15:37:31,630 [27044] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 15:37:31,631 [27044] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 15:37:31,632 [27044] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 15:37:31,641 [27044] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 15:37:31,642 [27044] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 15:37:31,642 [27044] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 20:04:11,255 [27044] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 20:04:11,256 [27044] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 20:04:11,257 [27044] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 20:04:11,267 [27044] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 20:04:11,268 [27044] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 20:04:11,269 [27044] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 20:34:19,576 [27044] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 20:34:19,576 [27044] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 20:34:19,577 [27044] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 20:34:19,584 [27044] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 20:34:19,585 [27044] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 20:34:19,586 [27044] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 20:45:48,269 [6856] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 20:45:48,270 [6856] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 20:45:48,270 [6856] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 20:45:48,271 [6856] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 20:45:48,272 [6856] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 20:45:48,272 [6856] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 21:15:17,315 [6856] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 21:15:17,315 [6856] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 21:15:17,316 [6856] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 21:15:17,319 [6856] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 21:15:17,320 [6856] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 21:15:17,320 [6856] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 22:55:31,513 [6856] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 22:55:31,514 [6856] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 22:55:31,514 [6856] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 22:55:31,520 [6856] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 22:55:31,521 [6856] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 22:55:31,522 [6856] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-15 23:02:17,879 [10464] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-15 23:02:17,879 [10464] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-15 23:02:17,879 [10464] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-15 23:02:17,880 [10464] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-15 23:02:17,881 [10464] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-15 23:02:17,881 [10464] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-16 00:36:41,120 [10464] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-16 00:36:41,124 [10464] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-16 00:36:41,124 [10464] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-16 00:36:41,138 [10464] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-16 00:36:41,141 [10464] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-16 00:36:41,142 [10464] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-16 00:46:02,758 [10464] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-16 00:46:02,758 [10464] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-16 00:46:02,758 [10464] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-16 00:46:02,766 [10464] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-16 00:46:02,766 [10464] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-16 00:46:02,767 [10464] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-16 08:16:15,416 [10464] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-16 08:16:15,417 [10464] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-16 08:16:15,417 [10464] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-16 08:16:15,423 [10464] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-16 08:16:15,424 [10464] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-16 08:16:15,425 [10464] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-16 08:17:33,569 [10464] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-16 08:17:33,569 [10464] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-16 08:17:33,569 [10464] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-16 08:17:33,573 [10464] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-16 08:17:33,575 [10464] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-16 08:17:33,575 [10464] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-16 09:23:50,628 [10464] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-16 09:23:50,629 [10464] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-16 09:23:50,629 [10464] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-16 09:23:50,634 [10464] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-16 09:23:50,635 [10464] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-16 09:23:50,636 [10464] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-16 09:31:52,364 [10464] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-16 09:31:52,364 [10464] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-16 09:31:52,365 [10464] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-16 09:31:52,373 [10464] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-16 09:31:52,375 [10464] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-16 09:31:52,375 [10464] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-16 09:33:12,888 [34460] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-16 09:33:12,890 [34460] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-16 09:33:12,890 [34460] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-16 09:33:12,891 [34460] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-16 09:33:12,892 [34460] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-16 09:33:12,892 [34460] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-16 09:41:16,897 [34460] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-16 09:41:16,897 [34460] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-16 09:41:16,897 [34460] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-16 09:41:16,899 [34460] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-16 09:41:16,899 [34460] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-16 09:41:16,900 [34460] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-16 09:46:58,771 [34460] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-16 09:46:58,771 [34460] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-16 09:46:58,771 [34460] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-16 09:46:58,777 [34460] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-16 09:46:58,778 [34460] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-16 09:46:58,778 [34460] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-16 10:03:29,334 [34460] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-16 10:03:29,335 [34460] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-16 10:03:29,335 [34460] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-16 10:03:29,349 [34460] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-16 10:03:29,351 [34460] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-16 10:03:29,352 [34460] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-16 10:27:52,826 [34460] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-16 10:27:52,826 [34460] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-16 10:27:52,829 [34460] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-16 10:27:52,834 [34460] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-16 10:27:52,836 [34460] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-16 10:27:52,837 [34460] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-16 11:38:19,610 [34460] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-16 11:38:19,610 [34460] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-16 11:38:19,612 [34460] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-16 11:38:19,617 [34460] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-16 11:38:19,619 [34460] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-16 11:38:19,620 [34460] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-16 11:38:43,571 [34460] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-16 11:38:43,572 [34460] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-16 11:38:43,572 [34460] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-16 11:38:43,576 [34460] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-16 11:38:43,577 [34460] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-16 11:38:43,578 [34460] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-16 12:28:33,593 [34460] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-16 12:28:33,594 [34460] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-16 12:28:33,596 [34460] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-16 12:28:33,600 [34460] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-16 12:28:33,602 [34460] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-16 12:28:33,602 [34460] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-16 12:48:11,797 [18732] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-16 12:48:11,798 [18732] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-16 12:48:11,798 [18732] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-16 12:48:11,801 [18732] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-16 12:48:11,801 [18732] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-16 12:48:11,803 [18732] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-16 12:56:04,436 [18732] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-16 12:56:04,436 [18732] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-16 12:56:04,436 [18732] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-16 12:56:04,438 [18732] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-16 12:56:04,439 [18732] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-16 12:56:04,439 [18732] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-16 13:52:37,840 [18732] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-16 13:52:37,842 [18732] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-16 13:52:37,843 [18732] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-16 13:52:37,853 [18732] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-16 13:52:37,856 [18732] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-16 13:52:37,856 [18732] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-16 14:32:33,146 [1536] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-16 14:32:33,147 [1536] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-16 14:32:33,147 [1536] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-16 14:32:33,148 [1536] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-16 14:32:33,149 [1536] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-16 14:32:33,149 [1536] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-16 14:32:33,939 [1536] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-16 14:32:33,939 [1536] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-16 14:32:33,939 [1536] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-16 14:32:33,941 [1536] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-16 14:32:33,941 [1536] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-16 14:32:33,942 [1536] DEBUG    root:97: [JupyterRequire] Registering comm targets.
